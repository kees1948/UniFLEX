After some long thoughts I choose to take a different approach. Instead of making distinct CPU09FLP/CPU09NWP/CPU09SPI boardsI ended up with one generic CPU09GPP design and a couple of pop-up boards.I long wanted to have a floppy interface as well. But there is no 68C44 nor a 63C44 at the planet. So I had to have a separate2 MHz system with it's own IDE drive for a floppy compatible system. A HD63C09 @ 4 MHz busclock can do the datarate for an 8" floppy at double-dennsity with 'the fingers in the nose'. So a dedicated CPU for this would solve a lot of problems.Most of the driver code would sit in a ROM for the dedicated CPU. The driver for the OS would be compact and allow, for the first timeever, UniFLEX to have 2 separate block device drivers. All systems from the past shared one block device driver over HD/FD and tape.Another possibility now is "Read Track". This reads a whole floppy track in a buffer and returns that data to the caller. The buffer data contains _all_ the bytes from one track including address marks, gap bytes, data marks, data and crc.In the past you could do a "write Track" but never a "read Track".One can create relatively simple pop-up boards for this generic IO processor for functions like Network over SPI, SD card over SPI and of course a floppy interface. Cost will be low as well. Yes you can have more than one CPU09GPP with a specific pop-up boardin a system (I will). But a single GPP with multiple pup-up boards is another way. And yes, you must swap the PROM as well.The memory map has the dual-port ram from 0000-03FF, the system ram from 0400 to 7FFF, the IO map from 8000-83FF and PROM from8400-FFFF. Plenty of space for code and data.On the OS side one GPP can be mapped to X000-X3FF/X400-X7FF/X800-XBFF/XC00-XFFF in pages F8/F9/FA/FB or FE. We can share thecurrent FIFO driver code (TSC) with some changes for this purpose. I spotted already a few bugs there :-).And when one creates his own pop-up board for his decicated purpose, nothing will hold him/her back.The IO connector on the GPP board passes D0-D7/A0-A9/E/RW/Q/RES/HLT/BS/BA/SELt/SEL2/5V/GND to the pop-up board and there areyet a few pins to spare.This means that I (for the time being) will not continue any longer on the CPU09SPI board.One final remark for those who want to run FLEX on the CPU09 hardware _and_ with floppy interface. Create a very simple (read cheap) CPU09GPP replacement without CPU but with own PROM address decoding and databus buffer. The floppy driver would sit in FLEX OS space but in a PROM @ i.e. E800-EFFF.In the works are a 09FLP (floppy controller) pop-up and a 09SPI (for SD card or W5500 network module) pop-up.A pop-up board is 100 x 100 mm in size.2020-03-08:  the CPU09GPP and the 09FLP boards are populated. I am starting tests and writing software now.2020-03-22:  I created a special kernel with the debug-acia driver present and the IOP. Additional I created a monitor ROMfor the CPU09GPP. With a special ACIA in kernel IO space I can communicate with the GPP monitor ROM. 2020-10-26:Put the final CPU09GPP gerber files on GitHub together with the corresponding GAL files and final schematics.2022-05-06:Kees de Jong made a nice description, with photo's, about upgrading your CPU09GPP in 'Upgrade CPU09GPP.pdf