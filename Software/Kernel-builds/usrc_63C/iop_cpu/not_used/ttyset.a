          opt     pag,nol             ttl     ttyset     utility          lib     sysdef              opt     lis                 pag               abs               info    UniFLEX    ttyset          info    Version    1.01, Released April 3, 1984          info    Copyright, (C) 1980, by          info    Technical  Systems Consultants, Inc.          info    All        rights reserved.* ttyset utility          org     0         ttys      ldd     #0         set file desc          std     ttchn               sys     ttyget,ttbuf get tty info          bec     ttys1      errors?          ldd     #2         set error channel          std     ttchn      save chan number          sys     ttyget,ttbuf try againttys1     ldd     0,s        get arg count          cmpd    #1         no args?          lbls    disp       go display params          clr     disf       clear flag          leau    4,s        point to arg listttys2     ldx     0,u++      get arg          beq     ttys4      end of args?          bsr     set        set data          bra     ttys2      repeatttys4     ldd     ttchn      set file desc          sys     ttyset,ttbuf set params          tst     disf       display?          lbne    disp                ldd     #0         set status          sys     term       exit** set** Set the tty data bits*set       clr     type       clear out type          lda     0,x        get 1st arg char          cmpa    #'+        is it +?          beq     set2                cmpa    #'-        is it -?          bne     set5                dec     type       set type          bra     set3      set2      inc     type       set typeset3      tst     1,x        is it lone + or - ?          bne     set4                inc     disf       set display flag          rts     return    set4      leax    1,x        point to string          bra     bits       go processset5      lbsr    trmt       check for term type          beq     set6                lbsr    schr       set special character?set6      rts     return              pag     ** bits** Set the control word bit in ttbuf*bits      ldy     #bittab    point to tablebits1     pshs    x          save string pointerbits2     lda     0,x+       get character          beq     bits6      end of string?          cmpa    0,y+       compare it          beq     bits2               leay    -1,y       back up one charbits4     tst     0,y+       find end of string          bne     bits4               leay    2,y        skip info          cmpy    #bitend    end of table          puls    x          reset pointer          bne     bits1               lbra    synerr     report errorbits6     tst     0,y+       end of string?          bne     bits4               puls    x          get string          lda     0,y        get bit pattern          ldb     1,y        get offset          bpl     bits65              negb              neg     type      bits65    ldy     #ttbuf     point to tty buffer          tst     type       plus or minus?          bpl     bits7               coma    set        for bit clear          anda    b,y        clear bit          bra     bits8     bits7     ora     b,y        set bitbits8     sta     b,y        save new value          rts     return              pag     ** Set terminal type.*trmt      ldy     #trmtab    point to tabletrmt1     pshs    x          save string pointertrmt2     lda     0,x+       get next char          beq     trmt5      end of string?          cmpa    0,y+       compare          beq     trmt2               leay    -1,y       backup one chartrmt4     tst     0,y+       find end of string          bne     trmt4               leay    1,y        skip data          cmpy    #trmend    end of table          puls    x          get string          bne     trmt1               clz     set        status (no-find)          rts     return    trmt5     tst     0,y+       end of string?          bne     trmt4               puls    x          get string          lda     0,y        get data          sta     ttbuf+1    set delays          sez     set        status          rts     return    ** schr** Check for special character set.*schr      ldd     0,x++      get 2 chars          cmpd    #('b<<8)|'s is it 'bs'?          beq     schr2               cmpd    #('d<<8)|'l          lbne    synerr              ldy     #ttbuf+2   cancel char          bra     schr3     schr2     ldy     #ttbuf+3   backspace charschr3     lda     0,x+       get char          cmpa    #'=        is it equals?          lbne    synerr              bsr     ghex       get the hex          lbne    synerr     error?          anda    #$7f                sta     0,y        set the char          rts     return              pag     ** ghex*ghex      lda     0,x+       get next char          bsr     hex        convert to binary          bne     ghex4      error?          pshs    a                   tst     0,x        single digit?          beq     ghex2               asla              asla              asla              asla              sta     0,s        save hi bits          lda     0,x+       get next char          bsr     hex        make binary          bne     ghex2               ora     0,s        add in previous          sez     set        statusghex2     puls    b          reset stackghex4     rts     return    ** hex*hex       cmpa    #'0        check for valid hex char          blo     hex4                cmpa    #'9                 bls     hex2                anda    #$5f       make upper case          cmpa    #'A                 blo     hex4                cmpa    #'F                 bhi     hex4                suba    #7         remove biashex2      anda    #$f        mask lo bits          sez     set        status          rts     return    hex4      clz     set        error status          rts     return              pag     ** disp** Display ttyset parameters*disp      ldu     #outlin    point to output buffer          lda     ttbuf      get control word          ldb     #8         set counter          pshs    b         disp2     rora    check      a bit          bcs     disp4      is it set?          ldb     #'-        set minus          stb     0,u        set in linedisp4     leau    10,u       bump to next slot          dec     0,s        dec the count          bne     disp2      repeat          puls    b          get count off stack          ldb     #'-                 lda     ttbuf+5    get hold processing bits          bita    #%10000000 is escoff set?          beq     disp42              stb     outli1    disp42    bita    #%01000000 is xon set?          bne     disp44              stb     outli1+10 disp44    bita    #%00100000 is xany set?          bne     disp46              stb     outli1+20 disp46    bita    #%00010000 is input XON set?          bne     disp47              stb     outli1+30 disp47    bita    #%00001000 is transparent mode set?          bne     disp48              stb     outli2    disp48    ldy     #trmtab    point to name list          lda     ttbuf+1    get delays          ldu     #outli2+10disp5     cmpa    4,y        find type          beq     disp6               leay    5,y                 cmpy    #trmend    end of table          bne     disp5               leay    -5,y       back updisp6     ldd     0,y        get name          std     0,u        set in line          lda     2,y                 sta     2,u                 leau    13,u       bump to next field          lda     ttbuf+3    get bs char          bsr     phex       put in line          leau    8,u        next field          lda     ttbuf+2    get cancel char          bsr     phex                ldd     #1         set file desc          sys     write,outlin,OSZ output line          ldd     #0         set status          sys     term       exit          pag     ** phex make ascii hex char*phex      pshs    a          save byte          lsra    get        hi bits          lsra              lsra              lsra              bsr     mhex       make it          sta     0,u+       save char          puls    a                   anda    #$f        mask lo bits          bsr     mhex                sta     0,u+                rts     return    * mhexmhex      adda    #$30       add in bias          cmpa    #'9        is it letter?          bls     mhex2               adda    #$27       make lettermhex2     rts     return    ** synerr - report error*synerr    ldd     #2         set file desc          sys     write,syms,SYSZ output error          ldd     #$ff       set status          sys     term                pag     * strings and datasyms      fcc     'Command syntax error.',$dSYSZ      equ     *-syms    bittab    fcc     'raw',0,$1,0           fcc     'echo',0,$2,0           fcc     'tabs',0,$4,0           fcc     'case',0,$8,0           fcc     'alf',0,$10,0           fcc     'becho',0,$20,0           fcc     'schar',0,$40,0           fcc     'cntrl',0,$80,0           fcc     'trans',0,$08,5 transparent mode          fcc     'ixon',0,$10,5 input XON mode          fcc     'any',0,$20,5           fcc     'xon',0,$40,5           fcc     'esc',0,$80,0-5 bitend    equ     * trmtab    fcc     'crt',0,0           fcc     'hcs',0,$3f           fcc     'hcm',0,$3a           fcc     'hcf',0,$35 trmend    equ     * outlin    fcc     '+raw +echo +tabs +case ',$d          fcc     '+alf +becho +schar +cntrl',$doutli1    fcc     '+esc +xon +any +ixon',$doutli2    fcc     '+trans xxx bs=xx dl=xx',$dOSZ       equ     *-outlin  disf      fcb     0          display flagtype      fcb     0          tty typettchn     fdb     0          tty chan numberttbuf     rmb     24         ttyget buffer          end     ttys      