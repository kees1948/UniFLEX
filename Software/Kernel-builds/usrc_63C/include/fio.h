  ttl FIO Simulation Structure pag** is now performed by CY7C130 dual port RAM where (1024 * 8)* the RAM size is limited to the (upper) 256 bytes, which* contains the Interrupt handshake locations**                ifc    &a,'IOPCPU'      non-kernel IOP driver build                org     $0000           -- Shared Dual Port RAM                else                base    $0000           -- Dual port RAM                endif************************************************************fio_cpu         rmb     1               FIO -> CPU Mailbox cellfio_cpu1        rmb     1               -- Additional cellfio_cpu2        rmb     1               --fio_cpu3        rmb     1               --fio_cpu4        rmb     1fio_cpu5        rmb     1fio_cpu6        rmb     1fio_cpu7        rmb     1************************************************************cpu_fio         rmb     1               CPU -> FIO Mailbox cell          message codecpu_fio1        rmb     1               -- Additional cell    sequence #cpu_fio2        rmb     1               --                    message specific datacpu_fio3        rmb     1               --                    terminal #cpu_fio4        rmb     1cpu_fio5        rmb     1cpu_fio6        rmb     1cpu_fio7        rmb     1************************************************************fifo_cnt        rmb     1               Count of data in FIFOfifo_get        rmb     2               FIFO consumer pointerfifo_put        rmb     2               FIFO producre pointer                rmb     32-(*-fio_cpu)  ** Filler **fifo            rmb     1** the  address of the top variables is calculated* from the total device size down-wards*                ifc    &a,'IOPCPU'      non-kernel IOP driver build* define filler                rmb     DPR_SMSZ-7-fifo-1  (FIOTVSZ)!  Shared Dual Port RAM                else                base    $0000           -- Dual port RAM                endif* FIO Configuration constantsNUM_TSK         rmb     1               Number of tasksNUM_CL          rmb     1               Number of CLISTSNUM_TRM         rmb     1               Number of terminals              initialized from FIO*DEV2CPU         equ     *               debug data from IOP/GPPNUM_NEC         rmb     1               Number of NEC/Qume printersCPU2DEV         equ     *               debug data to IOP/GPPNUM_PPR         rmb     1               Number of parallel printers* should end up at the two top locations in the DUALPORT RAMfio_cpuF        rmb    1       INT + non-zero   contains info AND set CPU IRQ when writtencpu_fioF        rmb    1       INT + non-zero   contains info AND set FIO IRQ when written**************************************************************FIOTVSZ         equ     *               top variables size                ifnc    &a,'IOPCPU'      non-kernel IOP driver build                if      ((IOP|UIO)=1)** FIO Task Priority*   -- Set to make task uninterruptable while*   -- actually using the FIO*FIOPRI          set     15** FIO Control structures** Transaction slots                base    0tran_seq        rmb     1               Transaction sequence #tran_resp       rmb     1               Transaction response codetran_val        rmb     1               Transaction specific value (returned character, etc)tran_oval       rmb     1               Output specific valuetran_msg        rmb     1               Message code senttran_dev        rmb     1               Device code*TRAN_SIZ        equ     ** FIO Control                base    0fio_mbx         rmb     2               Mailbox interlock - Task id of lockerfio_fifo        rmb     2               FIFO interlock - Task id of lockerfio_dba         rmb     2               FIFO base address of devicefio_fsz         rmb     2               FIFO data sizefio_dsz         rmb     2               FIFO device sizefio_mxtr        rmb     1               FIFO max transactionsfio_ict         rmb     1               Set non-zero if message interrupt was missedfio_tflg        rmb     1               Waiting on transaction slot semaphorefio_tran        rmb     2               transaction slots*FIO_SIZE        equ     *                endif                endif