** this is (an attempt) to implement the Berkely* socket interface into the UniFLEX 6309 kernel (no 6809)*        ifc     &a,'KERNEL'        base    0        else        org     0        endif* struct sockaddrsa_fam  rmb     2       address familysa_dat  rmb     14      protocol addressSKADLN  equ     ** struct sockaddr_insin_fam  rmb    2       AF_INETsin_port rmb    2       16 bit portsin_addr rmb    4       32 bit netid/hostid* address familiesAF_UNSP equ     0       AF_UNSPECAF_UNIX equ     1       AF_UNIXAF_INET equ     2       AF_INET* socket typesSK_STRM equ     1       socket streamSK_DGRM equ     2       datagram, conn lessSK_MRAW equ     3       mac raw socketSK_IRAW equ     4       IP raw socket*SK_NONBLK equ   $0100   non blockingSK_SPONCL equ   $0200   SIGPIPE on close* protocol familiesPF_UNIX equ     AF_UNIX same as address familiesPF_INET equ     AF_INETPROT_XLTEOL     equ     $8000  xlate CR<=>LF (stream only)PROT_ICMP       equ     1PROT_IGMP       equ     2PROT_EGP        equ     8*MAX_UDP equ     1472    max size of UDP packet                ifc     &a,'KERNEL'                data                endif