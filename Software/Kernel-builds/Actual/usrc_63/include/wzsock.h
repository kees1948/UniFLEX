** definition of wz5500 variables** [*] items are initialized by the IO CPU* others are zeroed out** [*] are setup by GPP CPU** wzfsta bits*WZSLCK  equ     %00000001       sock is locked (equal to fdn)*WZSKIO  equ     %00000010       io mode*WZSKIS  equ     %00000100       sock is sendingWZWLCK  equ     %00010000       sock task is waiting lock (equal to fdn)WZWBND  equ     %01000000       sock waiting for bindWZBUSY  equ     %10000000       sock is busy** protocol values*SP_ICMP equ     1               Internet Control Message ProtocolSP_GMP  equ     2               Internet Group Management ProtocolSP_TCP  equ     6               Transmission Control ProtocolSP_EGP  equ     8               Exterior Gateway ProtocolSP_UDP  equ     17              User Datagram Protocol** wzcmd values (w5500), private for IOP*WCOPEN  equ     1               open commandWCLIST  equ     2               list commandWCCONN  equ     4               connect commandWCDISC  equ     8               disconnectWCCLOS  equ     16              closeWCSEND  equ     32              sendWCSNAC  equ     33              send macWCSKEP  equ     34              send keepWCRECV  equ     64              receiveWCSPEC  equ     128             special, combined commandsWCRRQD  equ     128+1           read request dataWCXMDR  equ     128+2           write data in fifoWCBIND  equ     128+5           bind  CPU<=>GPPWCACCP  equ     128+6           accpet CPU<=>GPP** wzstat values*WSCLSD  equ     $00             sock closedWSINIT  equ     $13             sock initWSLIST  equ     $14             sock listenWSESTB  equ     $17             sock establishedWSCLWT  equ     $1c             sock close waitWSUDP   equ     $22             sock UDPWSMRAW  equ     $42             sock mac rawWSIRAW  equ     $32             sock IP rawWSSYNS  equ     $15             sock syn sentWSSYNR  equ     $16             sock syn receivedWSFWAI  equ     $18             sock fin wiatWSCLSG  equ     $1a             sock closingWSTIMW  equ     $1b             sock time waitWSLACK  equ     $1d             sock last ackWSRNBL  equ     $1e             sock read non blockWSWNBL  equ     $1f             sock write non blockWSSPEC  equ     $80             special combined commandsWSRRQF  equ     $80+1           read request data in fifoWSXMDD  equ     $80+2           xmit data taken from fifo** miscellaneous*PACK_FIRST equ  $80             in non TCP packet start to receivePACK_REMAI equ  $01             in non TCP packet receivedPACK_COMPL equ  $00             in non TCP complete toe receive* is SOCK_NONBLOCKWFNBLK     equ  $01             in socket() call(wztype << 8)* is SOCK_SIGPIPECLSWFSPOC     equ  $02             in socket() call(wztype << 8)        ifc     &a,'KERNEL'        base    0        else        org     $0        endif** per wzsocket process and socket data*wzenum  rmb     1       [*] (pre=enum)wzdctr  rmb     1       [*] (pre= $00)  delay counterwzfsta  rmb     1       (pre= $00) status bits (SAME POS!! as in fdn)wzflg   rmb     1       [*] flasgs, swap busy*wzcmnd  rmb     1       command byte copywzstat  rmb     1       status byte copywzprio  rmb     1       priority helperwzerr   rmb     1       error code passing*wzxfer  rmb     2       transfer sizewzrqln  rmb     2       requested size*wzdma1  rmb     2       if split xfer, first partwzdma2  rmb     2       if split xfer, second part** unix socket call info*wzsprt  rmb     2       source portwzdprt  rmb     2       destination portwzipad  rmb     4       dest IP addresswzsflg  rmb     2       flags** udp header info*wzuipa  rmb     4       ip address from UDP headerwzuprt  rmb     2       port number from UDP headerwzswap  equ     *       use this with TCP for swapwzurms  rmb     2       socket remained size* UDP write pointerwzuwrp  rmb     2       write pointer save** open parameters*wzfaml  rmb     2       family            for check AF_wztype  rmb     2       type              for check SOCK_wzprot  rmb     2       protocol          for check IPPROTO_WZSIZE  equ     *-wzenum        ifc     &a,'KERNEL'        base    0        else        org     $0        endif** holds the local IP info, wzdev  net0* ipad, mask, gwad, macad*wzmyip  rmb     4       Device IP addresswzsbnm  rmb     4       Subnet mask bitswzgwad  rmb     4       Gateway IP addresswzhwad  rmb     6       Device Hardware address*wzdsta  rmb     1       up/down status        rmb     3WZLCSZ  equ     *-wzmyip