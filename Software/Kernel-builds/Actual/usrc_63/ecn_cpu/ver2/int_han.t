          sttl    Interrupt  Processing          pag** This routine handles all IRQ interrupts**IRQ_han*-- Check for clock interrupt*          lda     #%10000000 get clock mask*          bita    CLOCK      check clock int*          beq     00f        no - try something else**          sta     CLOCKI     reset interrupt*          jsr     clkint     go process interrupt*          lbra    99f        exit*** highest prio, check from device (network?)*00        ldu     #dev_tab   scan devices          ldd     #0         start with device 0*10        ldx     dev_addr,u get device address          beq     20f        jump if none there*          ldy     dev_type,u get device type15        jsr     [D_inthan,y] call interrupt poller/handler          lbcs    99f        exit if interrupt serviced*20        addd    #1         next device          leau    DEV_SIZE,u          cmpd    #MAX_DEV   any more devices?          blo     10b** second prio, Check for FIO Mailbox interrupt*          lda     cpu_fioF   see if mailbox interrupt          beq     50f        no - move on* found mail box message25        ldx     int_ptr    input message pointer (int_buf)          lda     cpu_fio    move message          sta     ,x+          lda     cpu_fio1          sta     ,x+          lda     cpu_fio2          sta     ,x+          lda     cpu_fio3          sta     ,x+          clr     cpu_fioF   reset interrupt, indicate message consumed*          stx     int_ptr    update pointer          ldy     #int_buf   get message from buffer          lda     0,y        -- Send interrupt command?          cmpa    #O_INTRPT          bne     30f* erase task from queue          sty     int_ptr    reset pointer          ldb     3,y        get terminal #*!*       cmpb    NUM_TRM    is this a TTY device?*!*       bhs     99f        no - ignore message*          jsr     send_int          bra     99f        exit** search tasklist for free one*30        ldx     tsktab     search for an available task          ldb     NUM_TSK    Number of tasks in system*32        lda     tsstat,x          cmpa    #TFREE     looking for a "free" task          beq     40f*          leax    TSKSIZ,x          decb          bne     32b*          pshs    d,x          ldx     #00f          jsr     DB_pdata          jsr     DB_main          puls    d,x          ldb     #E_SYSBSY  can't process - IOP saturated!          jsr     fio_msg          bra     99f        exit** found free task entry*40        ldy     #int_buf   get message from buffer          sty     int_ptr    reset pointer          ldb     ,y+        command byte          stb     tscmd,x    save for task          lda     ,y+        sequence #          sta     tsseq,x          ldb     ,y+        command specific data          stb     tstval,x          lda     ,y+        associate with terminal          sta     tsdev,x*          jsr     makrdy     make task ready to run          bra     99f        exit** possible debugger entry*50        lbsr    DB_check   enter debugger?          bcc     99f*          lbsr    DB_main*99        rti     return     from interrupt*IRQmsg10  fcc     $d,'IOP Got: ',000        fcc     '-- No tasks!',0