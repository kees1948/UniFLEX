          lib     environment.h          sttl    Map        Table Handlers          pag          name    map_tables          global  getmap,fremap,chkmapP_MAP     set     0          Make non-zero to print map allocations, etc** getmap** Get a memory map entry*    X - Task table entry*getmap    pshs    x,u,y      save registers          ldb     MAXMAP     any maps in system?          lbeq    getma6     no - exit          ldu     maptbl     get map start          clrb    set        countergetma2    ldy     0,u++      check for 0 entry          lbeq    getma4          incb    bump       entry counter          cmpb    MAXMAP     end of map?          bne     getma2          clrb    see        if this task already in table          ldu     maptbl00        cmpx    ,u++       check for match          beq     getma4     match - use entry          incb    bump          cmpb    MAXMAP     end of maps?          bne     00b          ldb     #1         OK - find a swapped out task          ldu     maptbl     search task table          leau    2,u        skip system mapgetma3    ldy     0,u++      get task entry          lda     tsmode,y          bita    #TCORE     task in memory?          beq     givmap          incb    bump       counter          cmpb    MAXMAP          bne     getma3          ldb     #1         -- look for a map to steal          ldu     maptbl          leau    2,u        skip system map00        ldy     0,u++      check next entry          lda     tsstat,y          cmpa    #TTERM     task terminated?          beq     givmap     yes - he doesn't need a map          incb    bump       counter          cmpb    MAXMAP     any more maps?          bne     00b          ldb     #1         -- look for a task that doesn't need a map          ldu     maptbl          leau    2,u        skip system map00        ldy     0,u++      check next entry          lda     tsstat,y          cmpa    #TWAIT     task sleeping?          beq     givmap     yes - he doesn't need a map          incb    bump       counter          cmpb    MAXMAP     any more maps?          bne     00b          ldb     #1         -- look for a task that doesn't need a map          ldu     maptbl          leau    2,u        skip system map00        ldy     0,u++      check next entry          lda     tsstat,y          cmpa    #TSLEEP    task sleeping?          beq     givmap     yes - he doesn't need a map          incb    bump       counter          cmpb    MAXMAP     any more maps?          bne     00b          ldb     lastmap    last map # allocated          incb          cmpb    MAXMAP     legal map #?          blo     00f          ldb     #1         no - start over with 100        stb     lastmap    save stolen map #          pshs    b          save map #          lslb          ldu     maptbl     get map slot          leau    b,u          ldy     ,u++       get task entry          puls    b          restore map #          if      0          ldx     #nomapm    point to message          jmp     blowup     goodbye!          endifgivmap    lda     tsmode,y   invalidate map          ora     #TNOMAP          sta     tsmode,ygetma4          stx     -2,u       mark entry          lda     tsmode,x   mark map valid          anda    #!TNOMAP          sta     tsmode,xgetma6          puls    x,y,u,pc   return with map in b*lastmap   fcb     1          Last map # stolen** fremap** Free the current map number.*    B - Map # being released*    X - Task table entry of task*fremap    pshs    d,x          lda     MAXMAP     any maps in system          beq     99f        no - exit          ldx     maptbl          lslb    word       index          leax    b,x          ldd     0,x        check entry          cmpd    2,s          bne     99f          clr     ,x+          clr     ,x+        reset entry99        puls    d,x,pc     return** chkmap - Check if task has a map allocated*chkmap    pshs    d,x          ldb     MAXMAP     any maps in system?          beq     99f        no - exit          ldx     utask      get task pointer          cmpx    tsktab     task 0 needs no map          beq     99f          lda     tsmode,x   map valid?          bita    #TNOMAP          bne     01f        no - must allocate one          ldb     umapno     get current map #          bne     99f01        lbsr    getmap     allocate a map          stb     umapno          stb     urelod99        puls    d,x,pc     restore registers