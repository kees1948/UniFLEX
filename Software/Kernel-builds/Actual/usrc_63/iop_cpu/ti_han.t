          sttl    Terminal   Interrupt Handling Task          pag** TI_HAN Terminal interrupt handler*TI_HAN    ldy     #TI_Q      Terminal Interrupt Queue          seti          ldu     TI_Q_ptr   get current Q ptr          cmpu    #TI_Q      anything in Q?          bne     20f        yes - go process it*          ldb     #TIQPRI    wait for something to do          jsr     sleep          bra     TI_HAN** U[0]=int,U[1][2]=dev,U[3][4]=task*20        ldb     0,-u       B = Interrupt #          pshs    b          ldd     0,--u       A = Device #          pshs    d          ldd     0,--u      task ID          pshs    d          save registers          stu     TI_Q_ptr   update pointer** S[0][1]=task,U[2][3]=dev,U[4]=response*          ldb     3,s        set up to flush all input for this terminal          jsr     ttftab     X=ttytab, U=device table          jsr     flushi          clri    allow      interrupts*          jsr     FIO_get    get access to FIO          ldd     0,s++      task ID          std     fio_cpu1          ldd     ,s++       terminal #          std     fio_cpu3   terminal          ldb     ,s+        interrupt #          stb     fio_cpu2   signal          ldb     #R_INTRPT          jsr     fio_msg    send interrupt message          jsr     FIO_rel    release access to FIO          bra     TI_HAN     process more if needed** Send_TI - Send a terminal interrupt*   B = Interrupt #*   X = TTY Table*   jsr send_TI*send_TI   pshs    d,x,y,u    save registers          ldu     TI_Q_ptr   get Q head          cmpu    #TI_Q_ptr  check for overflow          bhs     90f        exit if so - sorry*          pshs    b          ldd     ttask,x    task id          std     0,u++          ldd     tdevic,x   get terminal #          std     0,u++      place value in Queue          puls    b          stb     0,u+          stu     TI_Q_ptr   update pointer** U[0]=int,U[1][2]=dev,U[3][4]=task**90        ldy     #TI_Q      wake up Queue server          jsr     wakeup          puls    d,x,y,u,pc return