** slave driver for PTY's pseudo tty*        lib     ../mach_m1/sysconfig.h        if      (PTTY=1)        lib     ./gendrvr.h        lib     ../include/tty.h        lib     ../include/ust.h        lib     ../include/sysdefs.h        lib     ../include/inttab.h        data        global  ptysop,ptyscl,ptysrd,ptyswr,ptysspptyopen rzb     MAXPTY          open flags** open slave device, shoudl be exclusively* on error, the open failed*ptysop  equ     *        bsr     ptgxtb          get table        bne     02f             no error return* table failed, was it control device?ptyer2  tstb                    for control info only        beq     01fptyer1  lda     #EBDEV          error selecting device04      sta     uerror01      rts03      lda     #EBSY          error return        bra     04b02      subb    minpty          first pty        ldx     #ptyopen        open flags        abx        tst     0,x        bne     03b             already open, error        inc     0,x             set new open        rts** close slave device*ptyscl  equ     *        bsr     ptgxtb        beq     ptyer1        tstb                    pty control?        beq     01f             just return* only for normal ptys        pshs    b               save port info        jsr     flusht          empty device queues        ldd     #HANGS          signal all connected processes        jsr     intrpt          send hangup        puls    b               restore        subb    minpty          first pty        ldx     #ptyopen        open flags        abx        clr     0,x             set closed01      rts** slave read, get master write data*ptysrd  equ     *        bsr     ptgxtb          get table info        beq     ptyer1        lda     #1              set user IO space        sta     uiosp*02      ldy     tqout,x        jsr     getc            get char from queue        bmi     01f        jsr     passc           to user        bra     02b* wakeup senders01      ldy     tqout,x        jsr     wakeup          wake sleepers        rts** slave write, is master read data*ptyswr  equ     *        bsr     ptgxtb          get table info        beq     ptyer1        lda     #1              set user IO space        sta     uiosp*02      jsr     cpass           byte from user        bmi     01f        jsr     ttyin           to input queue        bra     02b*01      ldy     tqin,x          wake readers        jsr     wakeup        rts** return the right tty structure* return: Z=set, table invalid, Z=clr, table valid*ptgxtb  pshs    d        subb    minpty        bmi     ptxer1          too low        cmpb    #MAXPTY        bhs     ptxer1          too high*        ldb     1,s             restore B        ldx     ttytab        lda     #TTYSIZ        mul        leax    d,x             pick right table        ldd     taddr,x         address MUST be zero        bne     ptxer1        lda     #1              CLZ01      puls    d,pcptxer1  clra                    SEZ        bra     01b** special, return control info*ptyssp  equ     *        tfr     x,y        sty     -2,s            tst Y        beq     ptyset* data to userptyget  lda     minpty        ldb     #MAXPTY        std     0,y        ldd     #0        std     2,y        std     4,y        rts* data from userptyset  nop                        nothing        rts        endif        end