Network Boot                         16:03:38  Jun 25, 2024   Page    1boots kernel from 'boot/root' server                                               info   Bootstrap  for CPU09GPP/09NET                     *                     * generic defines for unibug ROM                     *                               opt    lis                     *                     * here details about networking hardware                     * and software are to be found                     *                                    002A  WZSIZE    equ    $2a       from wzsock.h               0008  WZNSOCK   equ    8         8 times w5500               0016  WZLCSZ    equ    $16       from wzsock.h                     *                     * from fio.h                     *               0200  fio_fsz   equ    512       max data bytes in DPR               0400  fio_dsz   equ    1024      max DPR size                     *               E800  fio_dba   equ    $e800     fio device base address                     *               0000  cpu_fio   equ    0               0001  cpu_fio1  equ    1               0003  cpu_fio2  equ    3               0004  cpu_fio3  equ    4               0006  cpu_fio4  equ    6               0008  cpu_fio5  equ    8                     *               001C  fifo_us2  equ    $001c     special data area               001E  fifo_us3  equ    $001e     idem                     *               0020  fifo      equ    $0020     offset to fifo                     *               0220  fifo_us0  equ    fifo+fio_fsz                     *               0370  fifo_us1  equ    fifo_us0+(WZNSOCK*WZSIZE)                     * here the WZLCSZ data sits                                          *                     * from wzsock.h                     *               0002  wzfsta    equ    $02               000A  wzrqln    equ    $0a               0008  wzxfer    equ    $08               0012  wzdprt    equ    $12               0014  wzipad    equ    $14               0024  wzfaml    equ    $24               0026  wztype    equ    $26               0028  wzprot    equ    $28                     *               0080  WZBUSY    equ    %10000000                     Network Boot                         16:03:38  Jun 25, 2024   Page    2boots kernel from 'boot/root' server                                     *                     * socket codes                     *               0008  S_OPEN    equ    $08       open socket               0040  S_CONNECT equ    $40       connect socket               00D0  S_RQRBLK  equ    $d0       request read NBSIZE block               00D8  S_RDRBLK  equ    $d8       do read NBSIZE block               0082  R_RQRBLK  equ    $82       response               0083  R_RDRBLK  equ    $83       repsonse               0084  R_ERRBLK  equ    $84       error response                     *               0002  AF_INET   equ    2               0001  SK_STRM   equ    1               0200  SK_SPONCL equ    $0200                                          *                     * various                     *               0200  BUFSIZ    equ    512       UniFLEX buffer size                                          *                     * missing 63x09 macros                     *                                          * register references               0000  D         equ    0               0001  X         equ    1               0002  Y         equ    2               0003  U         equ    3                                          ldwx      macro                               fdb    $10A6                               doindx &1,&2                               endm                                          addr      macro                               fdb    $1030                               fcb    &1<<4|&2                               endm                                          tfm1      macro                               fdb    $1138                               fcb    &1<<4|&2                               endm                                          doindx    macro                               if     (&1=0)                               fcb    $84+(&2<<5)                               else                               if     (&1<16)                               fcb    (&2<<5)+(&1&$0f)                               elseNetwork Boot                         16:03:38  Jun 25, 2024   Page    3boots kernel from 'boot/root' server                                               if     (&1>-16)                               fcb    (&2<<5)+($10)+(&1&$0f)                               else                               if     (&1<128)                               fcb    $88+(&2<<5),(&1&$7f)                               endif                               endif                               endif                               endif                               endm                               opt    exp                                          * UniFLEX Bootstrap Loader for CPU09GPP/09NET                     *                     * Assumptions:                     * 'Boot' resides in to lower 65K blocks on the disk                     * boot from drive 0, first image                     *                     * the local network device has been setup after reset                     * with the settings found in the nwp ROM                     *                     * the connection to the remote server is coded in                     * wz8ipad and wz8port settings                     *               0800  nbootorg  equ    $0800     space for boot code                                          * Special core locations                                    0013  corcnt    equ    $13               0014  lstmem    equ    $14                                    F40A  DATMAP    equ    $F40A     Map for $A000                                          * Equates               0011  ffmap     equ    17        file map offset in fdn               000A  bhxfr     equ    10        transfer address offset in header               0018  BHDSIZ    equ    24        binary file header size                                          *                     * the UniFLEX kernel has some pointers at start of code                     *                     * 5000   fdb  unidat            relic from "install"                     * 5002   fdb  parttbl (unidat2)                     * 5004   fdb  unikey            relic from "install"                     * 5006   fdb  unisrn                     * 5008   fdb  contab                                    5002  parttbl   equ    $5002     tell boot where to find pointer                                          ****************************************************************************                     *                     *Network Boot                         16:03:38  Jun 25, 2024   Page    4boots kernel from 'boot/root' server                                     *                     ***************************************************************************                                          * Temporary storage                     * will be overwritten when kernel intializes  07E0                         org    nbootorg-32 in low memory, past memory tables  07E0               direct    rmb    1         index in map  07E1               mapptr    rmb    2  07E3               fdnbkn    rmb    3  07E6               entrys    rmb    2         entries in directory  07E8               xfradr    rmb    2  07EA               wzsock    rmb    2  07EC                         rmb    2                                          ********************************************                     * Start of program,                     ********************************************                       0800                         org    nbootorg                                          * Lookup "Boot" in directory                     *                     * on entry U holds the controller base address                     * D holds drive select info                     * >0800 16   0018     uboot     lbra   uboot0    skip disk type bytes                     ********************************************************                     * settings for /dev/netblk0 in booted kernel                     *                     *  0803 C0 A8 01 9B   wz8ipad   fcb    192,168,1,155 255,255,255,255  0807 7918          wz8port   fdb    31000     $ffff                     *                     ********************************************************                     * filename for booting  0809 0D            bootn     fcb    $0d  080A 75 6E 69 66   btname    fcc    'uniflexn' can't be choosen from commandline  0812 00            extchar   fcb    0         extra character for name  0813 00 00 00 00             fcb    0,0,0,0,0 14 in total  0818 0D 0A 00      crlf      fcb    $0d,$0a,0                     *  081B 8E   0809     uboot0    ldx    #bootn    show bootname  081E AD   9F F80A            jsr    [rpdata]  0822 8E   0818               ldx    #crlf  0825 AD   9F F80A            jsr    [rpdata]                     *  0829 B6   010A               lda    $010A     check block $A000 mapped in  082C 81   FD                 cmpa   #BLKHOL   black hole?  082E 26   5A                 bne    uboot2  0830 0A   13                 dec    corcnt    decrease number of pages available  0832 9E   14                 ldx    lstmem    pick up last page pointer  0834 A6   82                 lda    ,-x       get a pageNetwork Boot                         16:03:39  Jun 25, 2024   Page    5boots kernel from 'boot/root' server                  0836 9F   14                 stx    lstmem  0838 B7   010A               sta    $010A     set up map  083B B7   F40A               sta    DATMAP    map it in for us                     ************************************************************                     *                     * do initialization of things here                     *                     ************************************************************  083E 8E   E800               ldx    #fio_dba  fifo  0841 CE   0220               ldu    #fifo_us0  0844                         addr   X,U       X+U > U  0844 1030                    fdb    $1030  0846 13                      fcb    X<<4|U                               endm  0847 FF   07EA               stu    wzsock    (wzsock8)  084A A6   42                 lda    wzfsta,u  084C 8A   80                 ora    #WZBUSY  084E A7   42                 sta    wzfsta,u  0850 CC   0002               ldd    #AF_INET  0853 ED   C8 24              std    wzfaml,u  family  0856 CC   0201               ldd    #SK_STRM|SK_SPONCL  0859 ED   C8 26              std    wztype,u  085C CC   0000               ldd    #0  085F ED   C8 28              std    wzprot,u  0862 C6   08                 ldb    #S_OPEN  0864 BD   09CF               jsr    nw_msg    open socket                     * test error  0867 FC   0803               ldd    wz8ipad  086A ED   C8 14              std    wzipad,u  086D ED   89 03B0            std    $03b0,x  0871 FC   0805               ldd    wz8ipad+2  0874 ED   C8 16              std    wzipad+2,u  0877 ED   89 03B2            std    $03b2,x  087B FC   0807               ldd    wz8port  087E ED   C8 12              std    wzdprt,u  0881 ED   89 03B4            std    $03b4,x  0885 C6   40                 ldb    #S_CONNECT  0887 BD   09CF               jsr    nw_msg                     * test error                     *                     * socket for bootfile has been setup                     *                     ************************************************************                     *                     * here the actual boot process starts                     *                     ************************************************************  088A CC   0001     uboot2    ldd    #1        root directory fdn no.  088D BD   0933               jsr    fdnblk    read in fdn  0890 EC   27                 ldd    7,y       find size of directory  0892 BD   0917               jsr    divby8  0895 44                      lsraNetwork Boot                         16:03:39  Jun 25, 2024   Page    6boots kernel from 'boot/root' server                  0896 56                      rorb  0897 FD   07E6               std    entrys    save entry count  089A BD   0961     read1     jsr    rdblk     read data block  089D 1026 0090               lbne   noboot    exit if error                     *  08A1 30   42       lookup    leax   2,u       point to filespec  08A3 EC   C4                 ldd    0,u       check for deleted entry  08A5 27   13                 beq    nxtent    skip deleted files  08A7 108E 080A               ldy    #btname   point to boot file name  08AB C6   0E                 ldb    #14       set name length  08AD A6   80       cmpnam    lda    0,x+  08AF A1   A0                 cmpa   0,y+      is this boot file entry?  08B1 26   07                 bne    nxtent    if not, skip to next  08B3 5A                      decb  08B4 26   F7                 bne    cmpnam  08B6 EC   C4                 ldd    0,u       found it, get fdn  08B8 20   15                 bra    load      go load uniflex                     *  08BA BE   07E6     nxtent    ldx    entrys  08BD 30   1F                 leax   -1,x      decrement count  08BF BF   07E6               stx    entrys    end of directory?  08C2 27   6D                 beq    noboot    error if so  08C4 33   C8 10              leau   16,u      point to next entry  08C7 1183 0C00               cmpu   #buffer+512 past current block?  08CB 26   D4                 bne    lookup    check entry if not  08CD 20   CB                 bra    read1     else, get another block                                          ***************************************************************                     * found it, Load Boot Image                       08CF 8D   62       load      bsr    fdnblk    read in uniflex fdn  08D1 BD   0961               jsr    rdblk     read 1st block of the file  08D4 26   5B                 bne    noboot    exit if error  08D6 EC   4A                 ldd    bhxfr,u   get transfer address  08D8 FD   07E8               std    xfradr    save it  08DB 33   C8 18              leau   BHDSIZ,u  skip binary file header  08DE 8D   3E       getrc1    bsr    getchr    get record length in x  08E0 1F   98                 tfr    b,a  08E2 8D   3A                 bsr    getchr  08E4 1083 0000               cmpd   #0        terminator?  08E8 27   14                 beq    done      start uniflex if so  08EA 1F   01                 tfr    d,x  08EC 8D   30                 bsr    getchr    get load address in y  08EE 1F   98                 tfr    b,a  08F0 8D   2C                 bsr    getchr  08F2 1F   02                 tfr    d,y  08F4 8D   28       getrc2    bsr    getchr    get a data byte  08F6 E7   A0                 stb    0,y+      put in memory  08F8 30   1F                 leax   -1,x      decrement the count  08FA 26   F8                 bne    getrc2    loop if not end of record  08FC 20   E0                 bra    getrc1    else, get next record                     Network Boot                         16:03:39  Jun 25, 2024   Page    7boots kernel from 'boot/root' server                                     ***************************************************************                     * Boot is loaded, next  finish things up                     ***************************************************************  08FE FE   07EA     done      ldu    wzsock  0901 6F   42                 clr    wzfsta,u  release wzsock                                          ****************************************************************                     *                     *                     ***************************************************************  0903 6E   9F 07E8            jmp    [xfradr]  jump to transfer address                                                         0907  booterr   equ    *  0907 86   3F                 lda    #'?  0909 AD   9F F808            jsr    [routch]  090D 1F   98                 tfr    b,a  090F AD   9F F80C            jsr    [rhexbyt]  0913 3F                      swi              force reset                                          ***************************************************************                     *                     * artificial blockno of boot sector on disk                     *  0914 00 00 00      bootno    fcb    0,0,0     we need it for mread                                          ***************************************************************                     * Divide contents of D by 8                       0917 44            divby8    lsra  0918 56                      rorb  0919 44                      lsra  091A 56                      rorb  091B 44                      lsra  091C 56                      rorb  091D 39                      rts                                          ***************************************************************                     * Get single character from binary file                       091E 1183 0C00     getchr    cmpu   #buffer+512 more data in buffer?  0922 26   08                 bne    getch2    skip if so  0924 34   32                 pshs   a,x,y  0926 8D   39                 bsr    rdblk     else, read another block  0928 35   32                 puls   a,x,y  092A 26   03                 bne    nbootx    exit if error  092C E6   C0       getch2    ldb    0,u+      get character, advance ptr  092E 39                      rts                                          ***************************************************************                     * Uniflex file was not found                     Network Boot                         16:03:39  Jun 25, 2024   Page    8boots kernel from 'boot/root' server                  092F 35   06       nbootx    puls   d         fix stack  0931 20   D4       noboot    bra    booterr   return to monitor ROM                                          ***************************************************************                     * Read fdn specified in D                       0933 34   06       fdnblk    pshs   d         save fdn number  0935 C3   000F               addd   #15       convert to block number  0938 8D   DD                 bsr    divby8  093A FD   07E4               std    fdnbkn+1  093D 7F   07E3               clr    fdnbkn  0940 108E 07E3               ldy    #fdnbkn  0944 8D   46                 bsr    mread     read a block  0946 35   06                 puls   d         restore fdn number  0948 26   E5                 bne    nbootx    exit if error  094A 5A                      decb             calculate  buffer offset  094B C4   07                 andb   #$07  094D 86   40                 lda    #64  094F 3D                      mul              offset=(fdn&7)*64  0950 C3   0C00               addd   #map  0953 1F   02                 tfr    d,y       fdn pointer in y  0955 C3   0009               addd   #9        point to ffmap  0958 FD   07E1               std    mapptr    save map pointer  095B 86   0A                 lda    #10       get direct block count  095D B7   07E0               sta    direct    initialize indirect flag  0960 39                      rts                                          ***************************************************************                     * Read a block from file                       0961 7D   07E0     rdblk     tst    direct    a direct block?  0964 27   14                 beq    chgind    change to indirect  0966 7A   07E0               dec    direct    dec. direct count  0969 10BE 07E1               ldy    mapptr    get file map pointer  096D 8E   0A00               ldx    #buffer   setup buffer address  0970 8D   1D                 bsr    xread     read the sector  0972 34   01                 pshs   cc  0974 10BF 07E1               sty    mapptr  0978 35   81                 puls   cc,pc                       097A 10BE 07E1     chgind    ldy    mapptr    get file map pointer  097E 8D   0C                 bsr    mread     read block of indirects  0980 26   AD                 bne    nbootx    exit if error  0982 FF   07E1               stu    mapptr    reset file map pointer  0985 86   80                 lda    #128      set new direct count  0987 B7   07E0               sta    direct  098A 20   D5                 bra    rdblk     now read data block                                          ****************************************************                     * Read the specified map block (low level)                     ****************************************************  098C 8E   0C00     mread     ldx    #map      address of buffer for blockNetwork Boot                         16:03:40  Jun 25, 2024   Page    9boots kernel from 'boot/root' server                                     ****************************************************                     * LOW level drivers for IDE                     * in PIO mode hibyte is don't care                     *                     *   X - Buffer Address                     *   Y - Block # Pointer (updated)                     *                     ****************************************************                     * Read a single sector  098F 34   50       xread     pshs   x,u  0991 AF   62                 stx    2,s       U should return buffer  0993 FE   07EA               ldu    wzsock  0996 8E   E800               ldx    #fio_dba  0999 EC   21                 ldd    1,y       block #  099B ED   88 1E              std    fifo_us3,x  099E 31   23                 leay   3,y       tot next entry  09A0 CC   FF00               ldd    #$ff00    force READ  09A3 ED   88 1C              std    fifo_us2,x which clear hhh byte for blocks  09A6 CC   0200               ldd    #BUFSIZ  09A9 ED   4A                 std    wzrqln,u  09AB C6   D0                 ldb    #S_RQRBLK  09AD 8D   20                 bsr    nw_msg                     * test error  09AF C1   82                 cmpb   #R_RQRBLK  09B1 26   15                 bne    xrderr  09B3 C6   D8                 ldb    #S_RDRBLK  09B5 8D   18                 bsr    nw_msg                     * test error  09B7 C1   83                 cmpb   #R_RDRBLK  09B9 26   0D                 bne    xrderr                     *  09BB                         ldwx   wzxfer,2  IU!!  09BB 10A6                    fdb    $10A6  09BD                         doindx wzxfer,2  09BD 48                      fcb    (2<<5)+(wzxfer&$0f)                               endm                               endm  09BE 30   88 20              leax   fifo,x  09C1 EE   E4                 ldu    0,s       buffer address  09C3                         tfm1   X,U  09C3 1138                    fdb    $1138  09C5 13                      fcb    X<<4|U                               endm  09C6 35   D0                 puls   x,u,pc                       09C8 35   50       xrderr    puls   x,u  09CA 32   62                 leas   2,s  09CC 16   FF38               lbra   booterr   error                                          ****************************************************                     *                     * DPR access, X=fio_dba, B=cmd, U=wzsockNetwork Boot                         16:03:40  Jun 25, 2024   Page   10boots kernel from 'boot/root' server                                     *                     ****************************************************  09CF 34   50       nw_msg    pshs   x,u  09D1 E7   84                 stb    cpu_fio,x set command  09D3 EF   04                 stu    cpu_fio3,x set device info                     *  09D5 CE   0400               ldu    #fio_dsz  09D8 33   5F                 leau   -1,u  09DA                         addr   X,U       X+U > U  09DA 1030                    fdb    $1030  09DC 13                      fcb    X<<4|U                               endm  09DD E7   C4                 stb    0,u       cpio_fioF                     *  09DF E6   C4       01        ldb    0,u  09E1 26   FC                 bne    01b                     *  09E3 E6   5F       02        ldb    -1,u      fio_cpuF  09E5 27   FC                 beq    02b       B has status  09E7 6F   5F                 clr    -1,u      erase flag  09E9 35   D0                 puls   x,u,pc                                          ****************************************************  09EB 00 00 00 00             rzb    512-(*-uboot)                     * Buffers  0A00               buffer    rmb    512  0C00               map       rmb    512                                                    end0 Error(s) detected     1 Excessive BRANCH/JUMP(S) detectedNetwork Boot                         16:03:40  Jun 25, 2024   Page   11boots kernel from 'boot/root' server                Symbol Table:Absolute Symbols:AF_INET  0002   BHDSIZ   0018   BLKHOL   00FD   BUFSIZ   0200   D        0000   DATMAP   F40A   DATSENSE 0000   R_ERRBLK 0084   R_RDRBLK 0083   R_RQRBLK 0082   SK_SPONC 0200   SK_STRM  0001   S_CONNEC 0040   S_OPEN   0008   S_RDRBLK 00D8   S_RQRBLK 00D0   U        0003   WZBUSY   0080   WZLCSZ   0016   WZNSOCK  0008   WZSIZE   002A   X        0001   Y        0002   bhxfr    000A   booterr  0907   bootn    0809   bootno   0914   btname   080A   buffer   0A00   chgind   097A   cmpnam   08AD   corcnt   0013   cpu_fio  0000   cpu_fio1 0001   cpu_fio2 0003   cpu_fio3 0004   cpu_fio4 0006   cpu_fio5 0008   crlf     0818   direct   07E0   divby8   0917   done     08FE   entrys   07E6   extchar  0812   fdnbkn   07E3   fdnblk   0933   ffmap    0011   fifo     0020   fifo_us0 0220   fifo_us1 0370   fifo_us2 001C   fifo_us3 001E   fio_dba  E800   fio_dsz  0400   fio_fsz  0200   getch2   092C   getchr   091E   getrc1   08DE   getrc2   08F4   hirom    FE10   load     08CF   lookup   08A1   lstmem   0014   map      0C00   mapptr   07E1   mread    098C   nbootorg 0800   nbootx   092F   noboot   0931   nw_msg   09CF   nxtent   08BA   parttbl  5002   rdblk    0961   read1    089A   rhexbyt  F80C   rinch    F806   rinchk   F804   romadr   F800   romstk   BE80   routch   F808   rpdata   F80A   rrinit   F800   rtinit   F802   uboot    0800   uboot0   081B   uboot2   088A   usrvec   FFE0   vector   FFF0   wz8ipad  0803   wz8port  0807   wzdprt   0012   wzfaml   0024   wzfsta   0002   wzipad   0014   wzprot   0028   wzrqln   000A   wzsock   07EA   wztype   0026   wzxfer   0008   xfradr   07E8   xrderr   09C8   xread    098F   