          sttl    Terminal   Interrupt Handling Task          pag** SI_HAN Socket interrupt handler*SI_HAN    ldy     #SI_Q      Terminal Interrupt Queue          seti          ldu     SI_Q_ptr   get current Q ptr          cmpu    #SI_Q      anything in Q?          bne     20f        yes - go process it*          ldb     #SIQPRI    wait for something to do          jsr     sleep          bra     SI_HAN** U[0]=int,U[1][2]=dev,U[3][4]=task*20        ldb     0,-u       B = Interrupt #          pshs    b          ldd     0,--u       A = Device #          pshs    d          ldd     0,--u      task ID          pshs    d          save registers          stu     SI_Q_ptr   update pointer** S[0][1]=task,U[2][3]=dev,U[4]=response*          ldb     3,s        set up to flush all input for this terminal          clri    allow      interrupts*          jsr     FIO_get    get access to FIO          ldd     0,s++      task ID          std     fio_cpu1          ldd     ,s++       terminal #          std     fio_cpu3   terminal          ldb     ,s+        interrupt #          stb     fio_cpu2   signal          ldb     #R_INTRPT          jsr     fio_msg    send interrupt message          jsr     FIO_rel    release access to FIO          bra     SI_HAN     process more if needed** Send_SI - Send a socket interrupt*   B = Interrupt #*   X = task struct*   U= wzsock*   jsr send_SI*send_SI   pshs    d,x,y,u    save registers          ldd     wztype,u          bita    #WFSPOC          beq     99f*          ldu     SI_Q_ptr   get Q head          cmpu    #SI_Q_ptr  check for overflow          bhs     90f        exit if so - sorry*          ldd     tsseq,x    task ID @ master side          std     0,u++          ldd     tsdev,x    wzsock#          std     0,u++      place value in Queue          ldb     1,s        old B          stb     0,u+          stu     SI_Q_ptr   update pointer** U[0]=int,U[1][2]=dev,U[3][4]=task**90        ldy     #SI_Q      wake up Queue server          jsr     wakeup99        puls    d,x,y,u,pc return