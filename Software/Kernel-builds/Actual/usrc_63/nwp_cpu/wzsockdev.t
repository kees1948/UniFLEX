        pag        sttl    wz socket interface routines** the routines in this file are specific* for the W5500 socket device* they are called from "wskhan" and "wskdrv" files** wzsocket device table*DEV_SOCK        fdb     bad_cmd                   0        fdb     skopen          S_OPEN    1 open socket        fdb     skclos          S_CLOSE   2 close socket        fdb     skreqwr         S_RQWR    3 request write to socket        fdb     sksend          S_SEND    4 write data to socket        fdb     skreqrd         S_RQRD    5 request read data from socket        fdb     skrecv          S_RECV    6 read data from socket        fdb     skintrp         S_INTRPT  7 interrupt socket        fdb     skconn          S_CONNECT 8 connect socket        fdb     skbind          S_BIND    9 bind socket        fdb     sklist          S_LISTEN  10 listen on socket        fdb     skacpt          S_ACCEPT  11 accept connection        fdb     skdisc          S_DISCON  12 disconnect socket        fdb     sksmac          S_SNDMAC  13 send mac        fdb     skskep          S_SNDKEP  14 send keep alive        fdb     skspcl          S_SPCL    15 special command        fdb     skurrdf         S_RRDFRM  16 request read readfrom        fdb     skurrd          S_RREAD   17 read data readfrom        fdb     skurwt          S_WRQSTO  18 request write sendto        fdb     skusnt          S_WSNDTO  19 write data sendto        fdb     skusnm          S_WSNDTM  20 write data send more        fdb     sknone                    21        fdb     sknone                    22        fdb     sknone                    23        fdb     sknbsr          S_RQSBLK  24 netblock req send ext block        fdb     sknbsd          S_SNDBLK  25 netblock send ext block        fdb     sknbrr          S_RQRBLK  26 netblock req read ext block        fdb     sknbrd          S_RDRBLK  27 netblock read ext block        fdb     sknone                    28        fdb     sknone                    29        fdb     netboot                   30 network boot        fdb     memp2ff                   31 copy memory page to fifo** check nwp_devtab.h !!*        if      ((*-DEV_SOCK)/2)<>MAX_S_NUM        err     "table mismatch"        endif        fdb     skinthan        16 socket interrupt handler        fdb     skinit          17 socket initialization        fdb     sktest          18 test device present*