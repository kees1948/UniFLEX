Generic Boot                         00:24:21  Jul 16, 2019   Page    1boots first stage from IDE 0                                                       info   Bootstrap  for CPU09IDE                     *                     * generic defines for unibug ROM                     *                               opt    lis                                          * UniFLEX Bootstrap Loader for CPU09IDE                     *                     * Assumptions:                     * 'Boot' resides in to lower 65K blocks on the disk                     * boot from drive 0, first image                     *                                          * Special core locations                                    0013  corcnt    equ    $13               0014  lstmem    equ    $14                                    F40A  DATMAP    equ    $F40A     Map for $A000                                          * Equates               0011  ffmap     equ    17        file map offset in fdn               000A  bhxfr     equ    10        transfer address offset in header               0018  BHDSIZ    equ    24        binary file header size                                    01F0  PARTOFF   equ    $01f0     offset to partition table in disk block 0                                          * System equates for single sector read                                    0200  SECLEN    equ    512       sector length                                          *                     * the UniFLEX kernel has some pointers at start of code                     *                     * 5000   fdb  unidat            relic from "install"                     * 5002   fdb  parttbl (unidat2)                     * 5004   fdb  unikey            relic from "install"                     * 5006   fdb  unisrn                     * 5008   fdb  contab                                    5002  parttbl   equ    $5002     tell boot where to find pointer                                          *************************************************************************************************                     *                     *  High Address            Low  Address       High              Low                      *                     *  $f100                 $f101                Data 15...8       Data 7...0           (RW)                     *  $f102                 $f103              XXXX                 error/features       (R/W)                     *  $f104                 $f105              XXXX              sector count           (RW)                     *  $f106                 $f107              XXXX              LBA 0...7            (RW)                     *  $f108                 $f109              XXXX              LBA 8...15           (RW)                     *  $f10A                 $f10B              XXXX              LBA 16...23          (RW)Generic Boot                         00:24:21  Jul 16, 2019   Page    2boots first stage from IDE 0                                             *  $f10C                 $f10D              XXXX              LBA 24...27          (RW)                     *  $f10E                 $f10F              XXXX              status/command       (R/W)                     *  $f110                 $f111              DMA Addr 15...8   DMA Addr 7...0        (W)                      *  $f113                                    DMA Addr 19...16/DMAEN/DMARD/INTEN/CSEL (W)                     *  $f118                                    Status bits IRQ/IDEDMRQ/IDEINTR/IDEIORDY/IDEIO16  (R)                     *                     *                     *************************************************************************************************                                          * Temporary storage                     * will be overwritten when kernel intializes  07E0                         org    bootorg-32 in low memory, past memory tables  07E0               direct    rmb    1         index in map  07E1               mapptr    rmb    2  07E3               fdnbkn    rmb    3  07E6               entrys    rmb    2         entries in directory  07E8               xfradr    rmb    2  07EA               conadr    rmb    2         controller base address  07EC               drvsel    rmb    2         drive/table select bits                                          ********************************************                     * Start of program,                      ********************************************                       0800                         org    bootorg                                          * Lookup "Boot" in directory                     *                     * on entry U holds the controller base address                     * D holds drive select info                     * >0800 16   0019     uboot     lbra   uboot0    skip disk type bytes                     * filename for booting  0803 0D            bootn     fcb    $0d  0804 69 6D 61 67             fcc    'image: '  080B 75 6E 69 66   btname    fcc    'uniflex'  0812 00            extchar   fcb    0         extra character for name  0813 00 00 00 00             fcb    0,0,0,0,0,0 14 in total  0819 0D 0A 00      crlf      fcb    $0d,$0a,0                     *  081C FF   07EA     uboot0    stu    conadr    save this info  081F FD   07EC               std    drvsel    drive select                     *  0822 8E   0803               ldx    #bootn    show bootname  0825 AD   9F F80A            jsr    [rpdata]                     *  0829 108E 4E20               ldy    #20000  082D AD   9F F804  uboot02   jsr    [rinchk]  key pressed  0831 25   09                 bcs    uboot01  0833 BD   09EB               jsr    delay  0836 31   3F                 leay   -1,y  0838 26   F3                 bne    uboot02Generic Boot                         00:24:22  Jul 16, 2019   Page    3boots first stage from IDE 0                          083A 20   0F                 bra    uboot1                     *  083C AD   9F F806  uboot01   jsr    [rinch]   get character from keyboard  0840 81   30                 cmpa   #'0  0842 25   07                 blo    uboot1    invalid  0844 81   39                 cmpa   #'9  0846 22   03                 bhi    uboot1  0848 B7   0812               sta    extchar   extend boot name                     *  084B 8E   0819     uboot1    ldx    #crlf  084E AD   9F F80A            jsr    [rpdata]                     *  0852 B6   010A               lda    $010A     check block $A000 mapped in  0855 81   FD                 cmpa   #BLKHOL   black hole?  0857 26   0E                 bne    uboot2  0859 0A   13                 dec    corcnt    decrease number of pages available  085B 9E   14                 ldx    lstmem    pick up last page pointer  085D A6   82                 lda    ,-x       get a page  085F 9F   14                 stx    lstmem  0861 B7   010A               sta    $010A     set up map  0864 B7   F40A               sta    DATMAP    map it in for us                     *                     * here the actual boot process starts                     *  0867 CC   0001     uboot2    ldd    #1        root directory fdn no.  086A BD   0935               jsr    fdnblk    read in fdn  086D EC   27                 ldd    7,y       find size of directory  086F BD   091A               jsr    divby8  0872 44                      lsra  0873 56                      rorb  0874 FD   07E6               std    entrys    save entry count  0877 BD   0963     read1     jsr    rdblk     read data block  087A 1026 00B6               lbne   noboot    exit if error  087E 30   42       lookup    leax   2,u       point to filespec  0880 EC   C4                 ldd    0,u       check for deleted entry  0882 27   13                 beq    nxtent    skip deleted files  0884 108E 080B               ldy    #btname   point to boot file name  0888 C6   0E                 ldb    #14       set name length  088A A6   80       cmpnam    lda    0,x+  088C A1   A0                 cmpa   0,y+      is this boot file entry?  088E 26   07                 bne    nxtent    if not, skip to next  0890 5A                      decb  0891 26   F7                 bne    cmpnam  0893 EC   C4                 ldd    0,u       found it, get fdn  0895 20   17                 bra    load      go load uniflex  0897 BE   07E6     nxtent    ldx    entrys  089A 30   1F                 leax   -1,x      decrement count  089C BF   07E6               stx    entrys    end of directory?  089F 1027 0091               lbeq   noboot    error if so  08A3 33   C8 10              leau   16,u      point to next entry  08A6 1183 0C00               cmpu   #buffer+512 past current block?  08AA 26   D2                 bne    lookup    check entry if notGeneric Boot                         00:24:22  Jul 16, 2019   Page    4boots first stage from IDE 0                          08AC 20   C9                 bra    read1     else, get another block                                          * found it, Load Boot Image                       08AE BD   0935     load      jsr    fdnblk    read in uniflex fdn  08B1 BD   0963               jsr    rdblk     read 1st block of the file  08B4 26   7E                 bne    noboot    exit if error  08B6 EC   4A                 ldd    bhxfr,u   get transfer address  08B8 FD   07E8               std    xfradr    save it  08BB 33   C8 18              leau   BHDSIZ,u  skip binary file header  08BE 8D   61       getrc1    bsr    getchr    get record length in x  08C0 1F   98                 tfr    b,a  08C2 8D   5D                 bsr    getchr  08C4 1083 0000               cmpd   #0        terminator?  08C8 27   14                 beq    done      start uniflex if so  08CA 1F   01                 tfr    d,x  08CC 8D   53                 bsr    getchr    get load address in y  08CE 1F   98                 tfr    b,a  08D0 8D   4F                 bsr    getchr  08D2 1F   02                 tfr    d,y  08D4 8D   4B       getrc2    bsr    getchr    get a data byte  08D6 E7   A0                 stb    0,y+      put in memory  08D8 30   1F                 leax   -1,x      decrement the count  08DA 26   F8                 bne    getrc2    loop if not end of record  08DC 20   E0                 bra    getrc1    else, get next record                                          * Boot is loaded, begin execution                       08DE 7F   07EC     done      clr    drvsel    set for disk 0  08E1 108E 0917               ldy    #bootno   point to block 0 of disk  0  08E5 BD   098E               jsr    mread     read boot sector in map   08E8 26   4A                 bne    noboot    error!  08EA FE   5002               ldu    parttbl   we use (unidat2) as pointer to store partition table  08ED 8D   18                 bsr    cpypart                     * check ready drive 1  08EF C6   10                 ldb    #IDE_DSL  drive select bit  08F1 F7   07EC               stb    drvsel  08F4 34   40                 pshs   u  08F6 108E 0917               ldy    #bootno   point to block 0 of disk 1  08FA BD   098E               jsr    mread     read boot sector in map  08FD 35   40       don05     puls   u  08FF 26   02                 bne    don02     could not read  0901 8D   04                 bsr    cpypart                     *  0903 6E   9F 07E8  don02     jmp    [xfradr]  jump to transfer address                                          * copy part table from boot sector into kernel               0907  cpypart   equ    *  0907 108E 0DF0               ldy    #map+PARTOFF buffer with bootsector  090B 8E   0008               ldx    #8        8 words  090E EC   A1       don01     ldd    0,y++  0910 ED   C1                 std    0,u++Generic Boot                         00:24:22  Jul 16, 2019   Page    5boots first stage from IDE 0                          0912 30   1F                 leax   -1,x  0914 26   F8                 bne    don01  0916 39                      rts                                          *                     * artificial blockno of boot sector on disk                     *  0917 00 00 00      bootno    fcb    0,0,0     we need it for mread                                          * Divide contents of D by 8                       091A 44            divby8    lsra  091B 56                      rorb  091C 44                      lsra  091D 56                      rorb  091E 44                      lsra  091F 56                      rorb  0920 39                      rts                                          * Get single character from binary file                       0921 1183 0C00     getchr    cmpu   #buffer+512 more data in buffer?  0925 26   08                 bne    getch2    skip if so  0927 34   32                 pshs   a,x,y  0929 8D   38                 bsr    rdblk     else, read another block  092B 35   32                 puls   a,x,y  092D 26   03                 bne    nbootx    exit if error  092F E6   C0       getch2    ldb    0,u+      get character, advance ptr  0931 39                      rts                                          * Uniflex file was not found                       0932 35   06       nbootx    puls   d         fix stack  0934 3F            noboot    swi              return to monitor ROM                                          * Read fdn specified in D                       0935 34   06       fdnblk    pshs   d         save fdn number  0937 C3   000F               addd   #15       convert to block number  093A 8D   DE                 bsr    divby8  093C FD   07E4               std    fdnbkn+1  093F 7F   07E3               clr    fdnbkn  0942 108E 07E3               ldy    #fdnbkn  0946 8D   46                 bsr    mread     read a block  0948 35   06                 puls   d         restore fdn number  094A 26   E6                 bne    nbootx    exit if error  094C 5A                      decb             calculate  buffer offset  094D C4   07                 andb   #$07  094F 86   40                 lda    #64  0951 3D                      mul              offset=(fdn&7)*64  0952 C3   0C00               addd   #map  0955 1F   02                 tfr    d,y       fdn pointer in yGeneric Boot                         00:24:22  Jul 16, 2019   Page    6boots first stage from IDE 0                          0957 C3   0009               addd   #9        point to ffmap  095A FD   07E1               std    mapptr    save map pointer  095D 86   0A                 lda    #10       get direct block count  095F B7   07E0               sta    direct    initialize indirect flag  0962 39                      rts                                          * Read a block from file                       0963 7D   07E0     rdblk     tst    direct    a direct block?  0966 27   14                 beq    chgind    change to indirect  0968 7A   07E0               dec    direct    dec. direct count  096B 10BE 07E1               ldy    mapptr    get file map pointer  096F 8E   0A00               ldx    #buffer   setup buffer address  0972 8D   1D                 bsr    xread     read the sector  0974 34   01                 pshs   cc  0976 10BF 07E1               sty    mapptr  097A 35   81                 puls   cc,pc                       097C 10BE 07E1     chgind    ldy    mapptr    get file map pointer  0980 8D   0C                 bsr    mread     read block of indirects  0982 26   AE                 bne    nbootx    exit if error  0984 FF   07E1               stu    mapptr    reset file map pointer  0987 86   80                 lda    #128      set new direct count  0989 B7   07E0               sta    direct  098C 20   D5                 bra    rdblk     now read data block                                          ****************************************************                     * Read the specified map block (low level)                     ****************************************************  098E 8E   0C00     mread     ldx    #map      address of buffer for block                     ****************************************************                     * LOW level drivers for IDE                      * in PIO mode hibyte is don't care                     *                     *   X - Buffer Address                     *   Y - Block # Pointer                     *                     ****************************************************                     * Read a single sector (A,B = block no)  0991 34   10       xread     pshs   x         keep buffer address  0993 FE   07EA               ldu    conadr  0996 8D   35                 bsr    setadr    setup DMA address                     *  0998 4F                      clra  0999 C6   40                 ldb    #IDE_LBA  drive 0, LBA mode  099B FA   07EC               orb    drvsel    drive  099E ED   4C                 std    ideadr3,u  09A0 EC   4E                 ldd    idecmst,u  09A2 C1   50                 cmpb   #IDERDY+IDEDSC  09A4 26   25                 bne    ider2     error, not there                     *  09A6 E6   22                 ldb    2,y       block bits 15...0Generic Boot                         00:24:22  Jul 16, 2019   Page    7boots first stage from IDE 0                          09A8 ED   46                 std    ideadr0,u LBA 0...7  09AA E6   21                 ldb    1,y  09AC ED   48                 std    ideadr1,u LBA 8...15  09AE E6   A4                 ldb    0,y  09B0 ED   4A                 std    ideadr2,u LBA 16...23  09B2 31   23                 leay   3,y       bump pointer to next #  09B4 CC   0001               ldd    #1        sector count  09B7 ED   44                 std    idescnt,u                     *  09B9 C6   C8                 ldb    #IDEDRD   data read  09BB ED   4E                 std    idecmst,u set command  09BD A6   C8 18    ider1     lda    idestat,u  09C0 85   80                 bita   #IDEINTR  interrupt raised?  09C2 27   F9                 beq    ider1  09C4 6F   C8 13              clr    dmaltc,u  prevent DMA  09C7 EC   4E                 ldd    idecmst,u ack interrupt signal  09C9 C4   01                 andb   #IDEERR   leav error bit  09CB 35   C0       ider2     puls   u,pc      buffer now in u                                          * convert address for  CPU09IDE                       09CD B6   0100     setadr    lda    sysram    get memory map value  09D0 1F   89                 tfr    a,b  09D2 44                      lsra             get        upper half  09D3 44                      lsra  09D4 44                      lsra  09D5 44                      lsra  09D6 8A   C0                 ora    #L_DREAD+L_DMAEN  09D8 A7   C8 13              sta    dmaltc,u  address 19...16, READ DEVICE, DMA ENABLE  09DB 58                      lslb             get lower half  09DC 58                      lslb  09DD 58                      lslb  09DE 58                      lslb  09DF 34   04                 pshs   b         save it  09E1 1F   10                 tfr    x,d       get address  09E3 84   0F                 anda   #$0F      mask off upper 4 bits  09E5 AA   E0                 ora    0,s+      replace with map bits  09E7 ED   C8 10              std    dmaadh,u  09EA 39                      rts                                          * delay                       09EB 86   40       delay     lda    #$40  09ED 4A            del2      deca  09EE 26   FD                 bne    del2  09F0 39                      rts                                          ****************************************************                       09F1 00 00 00 00             rzb    512-(*-uboot)                     * Buffers  0A00               buffer    rmb    512Generic Boot                         00:24:22  Jul 16, 2019   Page    8boots first stage from IDE 0                          0C00               map       rmb    512                                                    end0 Error(s) detected     1 Excessive BRANCH/JUMP(S) detectedGeneric Boot                         00:24:22  Jul 16, 2019   Page    9boots first stage from IDE 0                        Symbol Table:Absolute Symbols:BHDSIZ   0018   BLKHOL   00FD   DATMAP   F40A   DATSENSE 0000   DEBSIG   A55A   DIVZRO   00FF   FALTI    0007   IDEBSY   0080   IDEDMRQ  0040   IDEDRD   00C8   IDEDSC   0010   IDEDWR   00CA   IDEERR   0001   IDEINTR  0080   IDEIO16  0001   IDEIORY  0002   IDEIRQ   0004   IDERDY   0040   IDERSTR  0010   IDE_DSL  0010   IDE_LBA  0040   ILGOPC   00FF   KILLI    0005   LSTPAG   00F7   L_ADDR   000F   L_CSEL   0010   L_DMAEN  0040   L_DREAD  0080   L_INTEN  0020   PARTOFF  01F0   PATIME   0001   PATIMR   0080   PBLGHT   00FF   PBMTRP   0080   PIRQMSK  0080   SECLEN   0200   TIMEI    0009   acia     F000   ascii    FFE4   bhxfr    000A   bootn    0803   bootno   0917   bootorg  0800   brdbas0  F100   brdbas1  F120   btname   080B   buffer   0A00   bufseg   000C   chgind   097C   cmpnam   088A   conadr   07EA   corcnt   0013   count    FFFA   cpypart  0907   crlf     0819   cuddwn   FE01   datbox   F400   datsiz   0400   dbsign   E800   debini   E804   debnmi   E802   del2     09ED   delay    09EB   digit    FFFB   direct   07E0   divby8   091A   dlen     001C   dmaadh   0010   dmaadl   0011   dmaltc   0013   don01    090E   don02    0903   don05    08FD   done     08DE   drvsel   07EC   entrys   07E6   extchar  0812   fdnbkn   07E3   fdnblk   0935   ffmap    0011   getch2   092F   getchr   0921   getrc1   08BE   getrc2   08D4   hiadr    FFFE   hirom    FE10   ideadr0  0006   ideadr1  0008   ideadr2  000A   ideadr3  000C   idecmst  000E   idedat   0000   ideerft  0002   ider1    09BD   ider2    09CB   idescnt  0004   idestat  0018   ioseg    000E   k_u_map  FE02   limit    FFF7   load     08AE   lookup   087E   lowadr   FFFC   lstmem   0014   map      0C00   mapptr   07E1   monpcra  F005   monpcrb  F007   monpdra  F004   monpdrb  F006   mread    098E   nbootx   0932   noboot   0934   nomap    00FD   nxtent   0897   offset   FFF5   parttbl  5002   rammap   0100   rdblk    0963   read1    0877   rhexbyt  F80C   rinch    F806   rinchk   F804   romadr   F800   rommap   FEFF   romseg   000F   romstk   BE80   routch   F808   rpdata   F80A   rrinit   F800   rtinit   F802   segadr   0010   segmax   0100   segmnt   FFF4   segsiz   1000   setadr   09CD   stkcnt   FE00   sysram   0100   sysres   0000   sysseg   0000   tfrseg   000D   tlatch   FE03   tstloc   D0F0   tstpat   99AA   txtseg   0005   uboot    0800   uboot0   081C   uboot01  083C   uboot02  082D   uboot1   084B   uboot2   0867   useres   0001   usrseg   000B   usrvec   FFE0   vector   FFF0   xfradr   07E8   xread    0991   