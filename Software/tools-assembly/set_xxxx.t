** this utility can set the preferred major/minor* for the root, pipe and swap device in an* uniflex boot image*        opt     nol        lib     sysdef        lib     syserrors        opt     lisKRNLORG equ     $5000           origin of kernel codeBINFHSZ equ     24              binary file headerBINFID  equ     $0212           binary file identifierBSEGHSZ equ     4               binary segment sizeKRNLPTR equ     12              where important pointers areCOFFSET equ     9               offset in config array to root setting*start   ldx     4,s             get target name        stx     fopen           set for open call        sys     ind,uopen       do open()        lbes     err1        std     ufdn            keep file pointer** an UniFLEX boot image is an absolute binary file* which loads at $5000 in kernel memory*        ldd     ufdn        sys     seek,0,0,0      read binary file header first        ldd     ufdn        sys     read,first,BINFHSZ        bes     err1* some sanity checks        ldx     #first          start of binary header        ldd     0,x             should match header ID        cmpd    #BINFID        bne     err1*        ldd     ufdn        sys     read,second,BSEGHSZ   read segment header        bes     err1*        ldx     #second        ldd     2,x             start address        cmpd    #KRNLORG        where kernelis expected to start        bne     err1        ldd     0,x             segment size        cmpd    #16        bls     err1*        ldd     ufdn        sys     read,third,12        bes     err1*        ldd     third+8             read pointer to config        subd    #KRNLORG        addd    #BINFHSZ+BSEGHSZ        addd    #COFFSET        std     uoffset*        ldd     ufdn        sys     ind,useek           seek in file to offset        bes     err1*        ldd     ufdn        sys     write,uset,usetl    set root/pipe/swap*        ldd     ufdn                close file        sys     close        ldd     #0        sys     termerr1    ldd     #2        sys     write,errmsg,errlen        ldd     #-1        sys     termerrmsg  fcc     "*** error occurred!",$derrlen  equ     *-errmsgufdn    rzb     2uopen   fcb     openfopen   fdb     0        fdb     2useek   fcb     seek        fdb     0uoffset fdb     0        fdb     0** IDE major = 0, FLP major = 3, NETBLK major = 4** make sure that the device drivers for these majors* are in this kernel image** default the values are set to invalid!  ADJUST*uset    fcb     $ff,$00         root major,minor        fcb     $ff,$00         pipe major,minor        fcb     $ff,$00         swap major,minorusetl   equ     *-usetfirst   rzb     24              binary file headersecond  rzb     4               binary segment headerthird   rzb     12              first part of kernel        end     start