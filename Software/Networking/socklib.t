        name    socket library        lib     /lib/sysdef        lib     /lib/syserrors        lib     /lib/macdefs        global  socket,connect        global  bind,accept,listen        global  bzero,bcopy,inet_addr        global  sendto,recvfrom        global  set6809        ext     _flacc,errno        textpbofs   equ     6       (y,u,pc) default stack***************************************************************socket  equ     *        pshs    y,u** on stack we find AF, TYPE, 0  int socket(FAM, TYPE, 0);* 3 call arguments 0,2,4*        ldu     pbofs+4,s point to arg2 (skarg3)        pshs    u        ldu     pbofs+4,s        pshs    u        ldu     pbofs+4,s        pshs    u        lda     #sksock        pshs    a*03      leax    0,s        sys     indx*        bes     01f02      leas    7,s        puls    y,u,pc*01      cmpd    #EINTR        beq     03b        cmpb    #ESOCK        bne     09f        tfr     a,b        clra        std     errno09      ldd     #-1        bra     02b***************************************************************** on stack  we find sock, *sockad, sockadlen* 3 call arguments, 3 on stack 0,2,4*connect equ     *        pshs    y,u        ldu     pbofs+4,s       addlen        pshs    u        ldu     pbofs+4,s       address        pshs    u        ldu     pbofs+4,s       file ref        pshs    u        ldb     #skconn        clra* put call on stack and sfd to D* common call and return for 3 argumentssk6cl   ldx     0,s             file ref        std     0,s             call parm        tfr     x,d             file ref        leax    1,s             call parm        sys     indx        leas    6,s*        bec     retok        ldd     #-1        bra     02f*retok   ldd     #002      puls    y,u,pc***************************************************************** on stack we find sock, *sockad, sockadlen* 3 call arguments on stack 0,2,4,bind    equ     *        pshs    y,u        ldu     pbofs+4,s       addlen        pshs    u        ldu     pbofs+4,s       address        pshs    u        ldu     pbofs+4,s       file ref        pshs    u        ldb     #skbind        clra        bra     sk6cl***************************************************************** on stack we find sock,backlog* 2 call arguments on stack 0,2listen  equ     *        pshs    y,u        ldu     pbofs+2,s       backlog        pshs    u        ldu     pbofs+2,s       sock        pshs    u        ldb     #sklist        clra*  common call for 2 argumentssk4cll  ldx     0,s        std     0,s        tfr     x,d        leax    1,s        sys     indx        bes     sk4er*sk4rt   leas    4,s        puls    y,u,pc*sk4er   tfr     a,b        clra        std     errno        ldd     #-1        bra     sk4rt***************************************************************** on stack we find sock, *addr, *addrlen* 3 call arguments 0,2,4accept  equ     *        pshs    y,u        ldu     pbofs+4,s        pshs    u        ldu     pbofs+4,s        pshs    u        ldu     pbofs+4,s        pshs    u        ldb     #skaccp        clra        bra     sk6cl***************************************************************** on stack we find sock, *buf, len, *sockaddr, *addrlen* 5 call arguments 0,2,4,6,8*recvfrom equ    *        pshs    y,u        ldu     pbofs+8,s   sockadlen        pshs    u        ldu     pbofs+8,s   sockad        pshs    u        ldu     pbofs+8,s   len        pshs    u        ldu     pbofs+8,s   buff        pshs    u        ldu     pbofs+8,s   sock        pshs    u        ldb     #skrecv        clra** common entry for call with 5 argumentssk10cl  ldx     0,s        std     0,s        tfr     x,d*03      leax    1,s        sys     indx        bes     sk10ersk10rt  leas    10,s        puls    y,u,pc*sk10er  cmpd    #EINTR        beq     03b        cmpb    #ESOCK        bne     09f        tfr     a,b        clra        std     errno        ldd     #-1             error flag for C09      bra     sk10rt***************************************************************** on stack we find sock, *buf, len, *sockaddr, addrlen* 5 call arguments 0,2,4,6,8*sendto   equ    *        pshs    y,u        ldu     pbofs+8,s   len        pshs    u        ldu     pbofs+8,s   addr        pshs    u        ldu     pbofs+8,s   count        pshs    u        ldu     pbofs+8,s   buf        pshs    u        ldu     pbofs+8,s   sock        pshs    u        ldb     #sksend        clra        bra     sk10cl***************************************************************** on stack  we find (void *s, size_t n)* 2 call arguments*bzero   equ     *        pshs    y,u        ldd     8,s             count        ldy     6,s             pointer04      std     -2,s            test D        bne     02f        puls    y,u,pc02      clr     0,y+        subd    #1        bra     04b***************************************************************** bcopy, 3 call arguments src, dest, size 0,2,4*bcopy   pshs    y,u             pbofs        pshsw                   +2        ldwi    pbofs+6,IS        ldu     pbofs+4,s        ldy     pbofs+2,s        tfm1    Y,U        pulsw        puls    y,u,pc***************************************************************** inet_addr, (const char cp*);* 1 call argument*inet_addr equ   *        pshs    y,u        ldx     6,s             old X        ldy     #_flacc         return        ldb     #4              should have 4 parts05      pshs    b               -1        clr     0,-s            -2 work space, zeroed*04      lda     0,x+        beq     02f             end of input?        cmpa    #'.             separator        beq     02f        ldb     0,s             multiply        lsl     0,s        lsl     0,s        lsl     0,s             *8        lslb        addb    0,s        stb     0,s             *10        suba    #'0             check        bmi     10f             error        cmpa    #9        bhi     10f             invalid        adda    0,s        sta     0,s        bcs     10f             illegal value        bra     04b*02      lda     0,s+            -1 put result        sta     0,y+        puls    b               -0        decb        bne     05b        ldx     #_flacc         where total result is        ldd     #0        puls    y,u,pc*10      lda     #12        sta     errno        leas    2,s        ldd     #-1        puls    y,u,pc***************************************************************set6809 ldmd    $03        rts