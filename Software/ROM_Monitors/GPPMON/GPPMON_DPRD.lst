0 error(s), 1 warning(s) unlisted in pass 1
                              nam    mon6809
                              opt     nop
                      *
                      * monitor program for 6309
                      *
                      * REV 3.0 DATE 12 11 83
                      * rev: 2021-07-17 CS
                      *
                      * C.SCHOENMAKERS
                      *
                      *
                      * PROGRAM ASSUMES A 2 KBYTE PROM !!..
                      *
                      *
                              OPT    PAG


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 1


                      *
                      * SYSTEM EQUATES
                      *
                      * DEBUG IO via DPR kernel debug interface
                      SPI0TUF equ $03fc       I/O via DPR
                      SPI0FUF equ $03fd
 
                      FIFO    EQU     $0000
 
 
                      RAMBASE EQU    $7f00
                              ORG    RAMBASE
                      IOVR    RMB    2         IRQ RAM VECTOR
                      NIOR    RMB    2         NMI RAM VECTOR
                      SWIVEC  RMB    2         SWI RAM VECTOR
                      FIRQVC  rmb     2       firq vector
                      SW2VEC  rmb     2       swi 2 ram vector
                      SW3VEC  rmb     2       swi 3 ram vector
                      TRAPVC  rmb             2               trap vector
                      BEGA    RMB    2         BEGIN ADDRESS
                      ENDA    RMB    2         END ADDRESS
                      INVEC   RMB    2         INPUT CHAR VECTOR
                      OUTVEC  RMB    2         OUTPUT CHAR VECTOR
                      TW      RMB    2         TEMP WORK REG
                      BYTEC1  RMB    1         BYTE COUNT
                      XTEMP3  RMB    2         TEMP FOR X
                      CKSM    RMB    1         CHECKSUM
                      XHI     RMB    1         ADDRESS BUILD
                      XLO     RMB    1
                      TEMP1   RMB    1         SCRATCH
                      TSP     RMB    2         USER STACK SAVE
                      MCONT   RMB    1         COUNTER
                      STATUS  RMB    1         ECHO / NOECHO FLAG
                      CPUMOD  rmb             1                6809/6309      
 
 
                      TSTACK  EQU    RAMBASE+$80-24 USER STACK
                      CSTACK  EQU    RAMBASE+$F0 MONITOR STACK
 
                      ROMBASE EQU      $F800
                              ORG    ROMBASE
                      *
                      * PROGRAM STARTS HERE
                      *
                      * first entries identical to SBUG
                      *
 F800 F999                            FDB             CONTRL
 F802 F94C                            FDB             START
 F804 FB56                            FDB             INFUF 
 F806 FB40                            FDB             INCAR
 F808 FB2F                            FDB             OTCAR           write 
char to terminal
 F80A F8CB                            FDB             PDATA1          
printstring (X)
 F80C F92F                            FDB             HEXBYT          print 
one hex byte (A)
 F80E F947                            FDB             OUTS
 F810 FA3C                            FDB             TINIT
 
 F812 7EF831          REENT   JMP     CONREN   JUMP INTO WARM MONITOR
 F815 6E9F7F00        IOV     JMP    [IOVR]     RAM VECTOR IRQ


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 2


 F819 6E9F7F02        POWDWN  JMP    [NIOR]     RAM VECTOR NMI
 F81D 6E9F7F04        SWIV    JMP    [SWIVEC]  RAM VECTOR SWI
 F821 6E9F7F06        FIRQV   jmp     [FIRQVC] ram firq vector
 F825 6E9F7F08        SWI2V   jmp     [SW2VEC]
 F829 6E9F7F0A        SWI3V   jmp     [SW3VEC]
 F82D 6E9F7F0C        TRAP    jmp     [TRAPVC]
 
 F831 347F            CONREN  PSHS   CC,D,DP,X,Y,U SAVE REMAINDER OF REGS
 F833 10FF7F1F                STS     TSP
 F837 7EF999                  JMP     CONTRL
 
                      RDRON
 F83A B67F22          NOECHO  LDAA   STATUS    UPDATE FLAG
 F83D 8A80                    ORAA   #$80
 F83F 7EFA49                  JMP    ECHO1     STORE AND RETURN
 
                      LOAD    EQU    *
 F842 8DF6                    BSR    RDRON     PUT READER ON
 F844 BDF88C          LOAD3   JSR    INCH      READ CHAR
 F847 8153                    CMPA   #'S       START OF RECORD?
 F849 26F9                    BNE    LOAD3     NO
 F84B BDF88C                  JSR    INCH
 F84E 8139                    CMPA   #'9       END RECORD?
 F850 2726                    BEQ    LOAD21    YES
 F852 8131                    CMPA   #'1       DATA RECORD?
 F854 26EE                    BNE    LOAD3     TRY AGAIN
 F856 7F7F1B                  CLR    CKSM      CLEAR CHECKSUM
 F859 8D4C                    BSR    INBYTE      READ COUNT
 F85B 8002                    SUBA   #2
 F85D B77F18                  STAA   BYTEC1    KEEP COUNT
 F860 8D2D                    BSR    BADDR     READ ADDRESS
 F862 8D43            LOAD11   BSR    INBYTE      DATA
 F864 7A7F18                  DEC    BYTEC1    LAST BYTE OF RECORD?
 F867 2708                    BEQ    LOAD15
 F869 A780                    STAA   0,X+        PUT DATA IN MEM
 F86B 20F5                    BRA    LOAD11
 
 F86D 863F            OUTQM   LDAA   #'?       OUTPUT '?'
 F86F 2018                    BRA    OUTCH
 
 F871 7C7F1B          LOAD15  INC    CKSM      MUST BE ZERO
 F874 27CE                    BEQ    LOAD3     YES
 F876 8DF5                    BSR    OUTQM     PUT MESSAGE
 
                      LOAD21  EQU    *
 F878 7EF999          C1      JMP    CONTRL    LEAVE LOADER
 
 F87B 44              OUTHL   LSRA
 F87C 44                      LSRA
 F87D 44                      LSRA
 F87E 44                      LSRA
 F87F 840F            OUTHR   ANDA   #%00001111 MASK BITS
 F881 8B30                    ADDA   #$30      CONVERT TO ASCII
 F883 8139                    CMPA   #$39
 F885 2302                    BLS    OUTCH
 F887 8B07                    ADDA   #7        WAS ALPHA
 
 F889 7EFB2B          OUTCH   JMP    OUTEE
 F88C 7EFB3C          INCH    JMP    INEEE
 
 F88F 8D16            BADDR   BSR    INBYTE      READ HIBYTE


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 3


 F891 250E                    bcs    OUTQA
 F893 B77F1C                  STAA   XHI
 F896 8D0F                    BSR    INBYTE      READ LOBYTE
 F898 2507                    bcs    OUTQA
 F89A B77F1D                  STAA   XLO
 F89D BE7F1C          BADR1   LDX    XHI       ADDRESS > X
 F8A0 39                      RTS
 F8A1 8DCA            OUTQA   BSR     OUTQM
 F8A3 BE7F1C                  LDX     XHI
 F8A6 39                      RTS
 
 F8A7 8D69            INBYTE    BSR    INHEX     READ LEFT NIBBLE
 F8A9 2518                    bcs     bytex
 F8AB 48                      ASLA
 F8AC 48                      ASLA
 F8AD 48                      ASLA
 F8AE 48                      ASLA
 F8AF 1F89                    tfr     a,b
 F8B1 8D5F                    BSR    INHEX     READ RIGHT NIBBLE
 F8B3 250E                    bcs     bytex
 F8B5 3404ABE0                ABA
 F8B9 1F89                    tfr     a,b
 F8BB FB7F1B                  ADDB   CKSM      UPDATE CHECKSUM
 F8BE F77F1B                  STAB   CKSM
 F8C1 1CFE                    clc
 F8C3 39              bytex   RTS              CHAR IN A'
 
 F8C4 8EFB95          OUTSTG  LDX    #MCL1     CRLF
 F8C7 2002                    BRA    PDATA1
 
 F8C9 8DBE            PDATA2  BSR    OUTCH     PUT CHAR
 F8CB A680            PDATA1  LDAA   0,X+      READ CHAR
 F8CD 8104                    CMPA   #4        EOT?
 F8CF 26F8                    BNE    PDATA2    NO OUTPUT IT
 F8D1 39                      RTS
 
                      CHANGE  EQU    *
 F8D2 8DBB                    BSR     BADDR  READ ADDRESS
 F8D4 8D71                    BSR    OUTS      SEPARATE
 F8D6 8D6D            CHA1    BSR    OUT2HS    OUTPUT DATA
 F8D8 8DB2                    BSR    INCH      COMMAND
 F8DA 810D                    CMPA   #$0D      CR?
 F8DC 2731                    BEQ    C11       EXIT
 F8DE 815E                    CMPA   #'^       PREV.?
 F8E0 2726                    BEQ    CHA11
 F8E2 1CFE                    clc
 F8E4 8D2F                    BSR    INHEX+3
 F8E6 2511                    BCS    CHA12     NO CHANGE
 F8E8 8DBF                    BSR    INBYTE+2
 F8EA 250D                    BCS    CHA12     NO CHANGE
 F8EC 301F                    DEX    ADJUST POINTER
 F8EE A700                    STAA   0,X         PUT DATA
 F8F0 A100                    CMPA   0,X         CHECK DATA
 F8F2 2703                    BEQ    CHA14
 F8F4 BDF86D                  JSR    OUTQM     WARN USER
 F8F7 3001            CHA14   INX    ADJUST POINTER
 F8F9 BF7F1C          CHA12   STX    XHI       SAVE X
 F8FC 8DC6                    BSR    OUTSTG    PUT CRLF
 F8FE 8E7F1C                  LDX    #XHI      OUTPUT NEW ADDRESS
 F901 8D40                    BSR    OUT4HS
 F903 BE7F1C                  LDX    XHI       RESTORE POINTER


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 4


 F906 20CE                    BRA    CHA1
 F908 301E            CHA11   leax    -2,x
 F90A 20ED                    BRA    CHA12
 F90C 17FF5E          C3      LBSR    OUTQM
 F90F 7EF999          C11     JMP    CONTRL
 
 F912 17FF77          INHEX   LBSR   INCH      GET CHAR
 F915 8A20                            oraa    #$20     make lower
 F917 8030                    SUBA   #$30      CHECK IF VALID
 F919 2B11                    BMI    C8
 F91B 8109                    CMPA   #$09      NUMERAL?
 F91D 230A                    BLS    IN1HG     YES
 F91F 8131                    CMPA   #$31      ALPHA
 F921 2509                    BLO    C8
 F923 8136                    CMPA   #$36
 F925 2205                    BHI    C8        NO
 F927 8027                    SUBA   #$27
 F929 1CFE            IN1HG   clc
 F92B 39                      RTS
 F92C 1A01            C8      sec
 F92E 39                      rts
 
 F92F 3402            HEXBYT  PSHS    A
 F931 BDF87B                          JSR    OUTHL
 F934 3502                            PULS    A
 F936 7EF87F                          JMP    OUTHR
 
 F939 A600            OUT2H   LDAA   0,X         GET CHAR
 F93B BDF87B          OUT2HA  JSR    OUTHL     LEFT NIBBLE
 F93E A680                    LDAA   0,X+
 F940 7EF87F                  JMP    OUTHR     RIGHT NIBBLE
 
 F943 8DF4            OUT4HS  BSR    OUT2H     LEFT BYTE
 F945 8DF2            OUT2HS  BSR    OUT2H     RIGHT BYTE
 F947 8620            OUTS    LDAA   #'        SPACE
 F949 7EF889                  JMP    OUTCH
 
                      START   EQU    *
 F94C 10CE7F68                LDS    #TSTACK   LOAD STACK POINTER
 F950 10FF7F1F                STS    TSP       SAVE IT
 F954 4F                      CLRA
 F955 1F8B                    TFR     A,DP
 F957 113D03                  FCB     $11,$3D,$03             set 6309
                      *
 
 F95A 86D0                    LDA    #$D0      SET CC REG
 F95C A760                    STA    0,S
 F95E 6F65                    clr    5,s      set dp
 F960 8EFA0A                  LDX    #SFE      SOFTWARE INTERR. ENTRY
 F963 BF7F04                  STX    SWIVEC
 F966 8EFA12                  LDX    #HWE      HARD WARE INTERRUPT
 F969 BF7F00                  STX    IOVR
 F96C BF7F02                  STX    NIOR       NMI VECTOR
 F96F BF7F08                  STX    SW2VEC
 F972 BF7F0A                  STX    SW3VEC
 F975 BF7F0C                  STX        TRAPVC
 F978 8EFB40                  LDX    #INCAR    SET INPUT SWITCH
 F97B BF7F12                  STX    INVEC
 F97E 8EFB2F                  LDX    #OTCAR    SET OUTPUT SWITCH
 F981 BF7F14                  STX    OUTVEC
 F984 7F7F22                  CLR    STATUS    ENABLE ECHO


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 5


 F987 BDFA3C                  jsr             TINIT
 F98A 8EF999                  ldx     #CONTRL
 F98D AF6C                    stx     12,s     set default go
 
 
                      * clear FIFO
 F98F 8E0000                  ldx #0
 F992 6F80            cl0001  clr     0,x+
 F994 8C0400                  cpx  #$400
 F997 25F9                    blo   cl0001
 
 
 F999 10CE7FF0        CONTRL  LDS    #CSTACK   MONITOR STACK
 F99D BDFA44                  JSR    RDROFF
 F9A0 BDFA43                  JSR    PNHOFF
 
 F9A3 8EFB8D                  LDX    #MCL0     PROMPT
 F9A6 BDF8CB                  JSR    PDATA1
 F9A9 BDFB24                  JSR    INCMD     WAIT FOR ALPHA
 F9AC 1F894D                  TAB              SAVE CHAR
 F9AF 17FF95                  LBSR    OUTS      SEPARATE
*** warning 1: Long branch within short branch range could be optimized
 F9B2 CA20                    orab    #$20
 F9B4 C163                    CMPB    #'c     CALL FUNCTION
 F9B6 102701B5                LBEQ    MCALL
 F9BA C170                    CMPB   #'p       PRINT/PUNCH
 F9BC 2743                    BEQ    CL1
 F9BE C16C                    CMPB   #'l       LOAD FILE?
 F9C0 2603                    BNE    *+5
 F9C2 7EF842                  JMP    LOAD      YES
 F9C5 C16D                    CMPB   #'m       CHANGE?
 F9C7 2603                    BNE    *+5
 F9C9 7EF8D2                  JMP    CHANGE    YES
 F9CC C172                    CMPB   #'r       PRINT REG?
 F9CE 2746                    BEQ    PRNTRG
 F9D0 C162                    cmpb    #'b
 F9D2 2600                    bne     contr1
                      *        ldx     #HWE
                      *        stx     SWIVEC
 F9D4 C167            contr1  CMPB   #'g       GO?
 F9D6 26C1                    BNE    CONTRL    NO
                      * GO cmd
 F9D8 BDFB4B                  JSR    INCRAW    HOW? (NO ECHO)
 F9DB 810D                    CMPA   #$0D      CR?
 F9DD 271A                    BEQ    CONTIN    WITH CURRENT ADDRESS
 F9DF BDFB2F                  JSR    OTCAR     echo char
 F9E2 BDF915                  JSR    INHEX+3   GET NEW ADDRESS
 F9E5 25B2                    BCS    CONTRL
 F9E7 BDF8A9                  JSR    INBYTE+2
 F9EA 25AD                    BCS    CONTRL
 F9EC BDF891                  JSR    BADDR+2
 F9EF 25A8                    bcs    CONTRL
 F9F1 FC7F1C                  LDD    XHI      TRANSFER ADDRESS
 F9F4 BE7F1F                  LDX    TSP       TO PSEUDO REGS
 F9F7 ED0C                    STD    12,x
 F9F9 BDF8C4          CONTIN  jsr     OUTSTG
 F9FC 10FE7F1F                LDS    TSP       RESTORE USER STACK
 FA00 3B                      RTI              AND RUN...
 
 FA01 8D3A            CL1     BSR    INCH1     GET SUB COMM.
 FA03 8168                    CMPA   #'h       PUNCH?


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 6


 FA05 2746                    BEQ    PUNCH
 FA07 7EFAE1                  JMP    PRINT
 
                      SFE     EQU    *
 FA0A 6D6D                    tst    13,s
 FA0C 2602                    bne     *+4
 FA0E 6A6C                    dec    12,s
 FA10 6A6D                    dec    13,s
 
                      HWE     EQU    *
 FA12 10FF7F1F                STS    TSP       SAVE STACK POINTER
 
 FA16 8D03            PRNTRG  BSR    PRTREG    PRINT REGS
 FA18 7EF999          C4      JMP    CONTRL
 
 FA1B BE7F1F          PRTREG  LDX    TSP       GET REG AREA
 FA1E BDF945                  JSR    OUT2HS    CC
 FA21 BDF943                  JSR    OUT4HS    A,B
 FA24 BDF943                  jsr   OUT4HS     wh/wl
 FA27 BDF945          PRT01   JSR    OUT2HS    DP
 FA2A BDF943                  JSR    OUT4HS    X
 FA2D BDF943                  JSR    OUT4HS    Y
 FA30 BDF943                  JSR    OUT4HS    U
 FA33 BDF943                  JSR    OUT4HS    PC
 FA36 8E7F1F                  LDX    #TSP
 FA39 7EF943                  JMP    OUT4HS    SP  +RTS
 
                      TINIT   
 FA3C 39                      RTS
 
 FA3D 7EFB3C          INCH1   JMP    INEEE
 FA40 7EFB2B          OUTCH1  JMP    OUTEE
 
 FA43 39              PNHOFF  RTS
                      RDROFF
 FA44 B67F22          ECHO    LDAA   STATUS
 FA47 847F                    ANDA   #$7F      RESET BIT
 FA49 B77F22          ECHO1   STAA   STATUS    STORE RESULT
 FA4C 39                      RTS
 
                      PUNCH   EQU    *
 FA4D 8D5F                    BSR     SADDR  GET BEGA ENDA
 FA4F BDFB63                  JSR    PNCHHD    PU'CH LEADER
 FA52 BE7F0E          PUN35   LDX    BEGA      MAKE TEMP POINTER
 FA55 BF7F16                  STX    TW
 FA58 FC7F10          PUN11   LDD    ENDA      CALC. SIZE
 FA5B B37F16                  SUBD   TW
 FA5E 10830018                CMPD   #24       STANDARD RECORD
 FA62 2502                    BCS    PUN23
 FA64 C617            PUN22   LDAB   #23
 FA66 CB04            PUN23   ADDB   #4
 FA68 F77F21                  STAB   MCONT     FRAMES
 FA6B C003                    SUBB   #3
 FA6D F77F1E                  STAB   TEMP1     DATA BYTES
 FA70 8EFBAE                  LDX    #MTAPE1   'S1'
 FA73 8D0D                    BSR    PUN40
 FA75 BE7F16          PUN50   LDX    TW        CHECK DONE
 FA78 301F                    DEX
 FA7A BC7F10                  CPX    ENDA
 FA7D 23D9                    BLS    PUN11
 FA7F 7EFB64                  JMP    PNCHTR    PUNCH TRAILER


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 7


 
 FA82 BDF8CB          PUN40   JSR    PDATA1    PUNCH STRING
 FA85 5F                      CLRB   CLEAR CHECKSUM
 FA86 8E7F21                  LDX    #MCONT    PUNCH FRAMES
 FA89 8D1E                    BSR    PUNT2
 FA8B 8E7F16                  LDX    #TW       PUNCH ADDRESS
 FA8E 8D19                    BSR    PUNT2
 FA90 8D17                    BSR    PUNT2
 FA92 BE7F16                  LDX    TW        DATA POINTER
 FA95 8D12            PUN32   BSR    PUNT2     PUNCH DATA
 FA97 7A7F1E                  DEC    TEMP1
 FA9A 26F9                    BNE    PUN32
 FA9C BF7F16                  STX    TW
 FA9F 53                      COMB             PUNCH CHECKSUM
 FAA0 3404                    PSHB
 FAA2 1F41                    TSX
 FAA4 8D03                    BSR    PUNT2
 FAA6 3504                    PULB
 FAA8 39                      RTS
 FAA9 EB00            PUNT2   ADDB   0,X         UPDATE CHECKSUM
 FAAB 7EF939                  JMP    OUT2H
 
 FAAE 8EFB9A          SADDR   LDX    #STRG1    PUT BEGA HEADER
 FAB1 BDF8CB                  JSR    PDATA1
 FAB4 8E7F0E                  LDX    #BEGA     PUT OLD BEGA
 FAB7 BDF943                  JSR    OUT4HS
 FABA BDFB3C                  JSR    INEEE     GET DATA
 FABD 8120                    CMPA   #'        SPACE;ALTER?
 FABF 2606                    BNE    SAD1      NO
 FAC1 BDF88F                  JSR    BADDR     NEW ADDRESS
 FAC4 BF7F0E                  STX    BEGA
 FAC7 8EFBA4          SAD1    LDX    #STRG2    ENDA HEADER
 FACA BDF8CB                  JSR    PDATA1
 FACD 8E7F10                  LDX    #ENDA     PUT OLD ENDA
 FAD0 BDF943                  JSR    OUT4HS
 FAD3 BDFB3C                  JSR    INEEE
 FAD6 8120                    CMPA   #'        SPACE;ALTER?
 FAD8 2606                    BNE    SAD2      NO
 FADA BDF88F                  JSR    BADDR     GET NEW ENDA
 FADD BF7F10                  STX    ENDA
 FAE0 39              SAD2    RTS
 
                      PRINT   EQU    *
 FAE1 8DCB                    BSR    SADDR     GET BEGA ENDA
 FAE3 BE7F0E                  LDX    BEGA      KEEP TEMP POINTER
 FAE6 BF7F16                  STX    TW
 FAE9 BDF8C4          PRT3    JSR    OUTSTG    CRLF
 FAEC 8E7F16                  LDX    #TW       OUTPUT ADDRESS
 FAEF BDF943                  JSR    OUT4HS
 FAF2 BE7F16                  LDX    TW        OUTPUT DATA
 FAF5 C610                    LDAB   #16       BLOCK SIZE
 FAF7 A600            PRT1    LDAA   0,X         GET DATA
 FAF9 BDF945                  JSR    OUT2HS    OUTPUT IN HEX
 FAFC 5A                      DECB
 FAFD 26F8                    BNE    PRT1
 FAFF BE7F16                  LDX    TW        RESTORE POINTER
 FB02 C610                    LDAB   #16       RESTORE SIZE
 FB04 A680            PRT2    LDAA   0,X+        GET DATA
 FB06 8D10                    BSR    SELCAR    OUTPUT IN ASCII
 FB08 5A                      DECB
 FB09 26F9                    BNE    PRT2


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 8


 FB0B BF7F16                  STX    TW        CHECK DONE
 FB0E 301F                            DEX
 FB10 BC7F10                  CMPX   ENDA
 FB13 25D4                    BLO    PRT3
 FB15 7EF999                  JMP    CONTRL    DONE
 
 FB18 8120            SELCAR  CMPA   #$20      CHECK LITERAL
 FB1A 2504                    BLO    PRT4      NO
 FB1C 817F                    CMPA   #$7F      UPPER LIMIT
 FB1E 2302                    BLS    PRT5
 FB20 862E            PRT4    LDAA   #'.       NOT PRINTABLE
 FB22 2007            PRT5    BRA    OUTEE
 
 FB24 8D16            INCMD   BSR    INEEE     GET CHAR
 FB26 8540                    BITA   #$40      ALPHA?
 FB28 27FA                    BEQ    INCMD     WAIT UNTIL
 FB2A 39                      RTS
 
 FB2B 6E9F7F14        OUTEE   JMP    [OUTVEC]  USE RAM VECTOR
 
                      * use the DPR debug interface
 FB2F 3404            OTCAR   PSHB             SAVE B
 FB31 F603FC          OT1     LDB    SPI0TUF   To UniFLEX
 FB34 26FB                    BNE     OT1      wait until taken
 FB36 B703FC                  STAA   SPI0TUF       debugIO
 FB39 3504            EXIT1   PULB   RESTORE B
 
 FB3B 39              EXIT    RTS
 
 FB3C 6E9F7F12        INEEE   JMP    [INVEC]   USE RAM VECTOR
 
                      * use the DPR debug interface
 FB40 3404            INCAR   PSHB             SAVE B
 FB42 8D07                    BSR    INCRAW
 FB44 7D7F22                  TST    STATUS    ECHO?
 FB47 2BF0                    BMI    EXIT1
 FB49 20E6                    BRA    OT1       ECHO
 
                      * pure input, no echo
 FB4B 8D09            INCRAW  BSR     INFUF
 FB4D 27FC                    BEQ     INCRAW
                              
 FB4F 847F            INC3    ANDA   #$7F
 FB51 817F                    CMPA   #$7F      SKIP RUBOUT
 FB53 27F6                    BEQ    INCRAW
 FB55 39                      RTS
 
 FB56 F603FD          INFUF   LDAB    SPI0FUF
 FB59 2706                    BEQ     NOFUF
 FB5B B603FD                  LDAA    SPI0FUF
 FB5E 7F03FD                  CLR     SPI0FUF
 FB61 5D              NOFUF   TSTB
 FB62 39                      RTS
                              
 FB63 39              PNCHHD  RTS
 
 FB64 8DFD            PNCHTR  BSR    PNCHHD    50 NULLS
 FB66 8EFBB5                  LDX    #MTAPE3   S9
 FB69 BDF8CB                  JSR    PDATA1
 FB6C 7EF999          C5      JMP    CONTRL    EXIT
 


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 9


 FB6F BDF88F          MCALL   jsr    BADDR
 FB72 2516                    bcs    CON1
 FB74 FC7F1C                  LDD    XHI      TRANSFER ADDRESS
 FB77 BE7F1F                  LDX    TSP       TO PSEUDO REGS
 FB7A ED0A                    STD    10,X
 FB7C 10FE7F1F                LDS    TSP       RESTORE USER STACK
 FB80 357F                    PULS    CC,D,DP,X,Y,U
 FB82 ADF1                    JSR     [0,S++]
 FB84 347F                    PSHS    CC,D,DP,X,Y,U
 FB86 10FF7F1F                STS     TSP
 FB8A 7EF999          CON1    JMP     CONTRL
 
 
 FB8D 0D0A00002A2A2A  MCL0    FCB    $D,$A,0,0,'*','*','*',$20
 FB94 20
 FB95 0D0A000004      MCL1    FCB    $D,$A,0,0,4
 FB9A 0D0A0000424547  STRG1   FCB    $D,$A,0,0,'B','E','G','A',$20,4
 FBA1 412004
 FBA4 0D0A0000454E44  STRG2   FCB    $D,$A,0,0,'E','N','D','A',$20,4
 FBAB 412004
 FBAE 0D0A0000533104  MTAPE1  FCB    $D,$A,0,0,'S','1',4
 FBB5 0D0A0000533900  MTAPE3  FCB    $D,$A,0,0,'S','9',0,0,4
 FBBC 0004
 
 
                              ORG    $FFF0
 FFF0 F82D                    FDB     TRAP    reserved
 FFF2 F829                    FDB     SWI3V
 FFF4 F825                    FDB     SWI2V
 FFF6 F821                    FDB     FIRQV
 FFF8 F815                    FDB    IOV        IRQ INPUT
 FFFA F81D                    FDB    SWIV      SWI VECTOR
 FFFC F819                    FDB    POWDWN    NMI
 FFFE F94C                    FDB    START     RESET VECTOR
 
                              END

1 warning(s) in pass 2.


mon6809                          2023-09-12 A09 6809 Assembler V1.37 Page 10


SYMBOL TABLE
     BADDR 02 F88F     BADR1 02 F89D      BEGA 02 7F0E    BYTEC1 02 7F18
     BYTEX 02 F8C3        C1 02 F878       C11 02 F90F        C3 02 F90C
        C4 02 FA18        C5 02 FB6C        C8 02 F92C      CHA1 02 F8D6
     CHA11 02 F908     CHA12 02 F8F9     CHA14 02 F8F7    CHANGE 02 F8D2
      CKSM 02 7F1B    CL0001 02 F992       CL1 02 FA01      CON1 02 FB8A
    CONREN 02 F831    CONTIN 02 F9F9    CONTR1 02 F9D4    CONTRL 02 F999
    CPUMOD 02 7F23    CSTACK 00 7FF0      ECHO 02 FA44     ECHO1 02 FA49
      ENDA 02 7F10      EXIT 02 FB3B     EXIT1 02 FB39      FIFO 00 0000
     FIRQV 02 F821    FIRQVC 02 7F06    HEXBYT 02 F92F       HWE 02 FA12
     IN1HG 02 F929    INBYTE 02 F8A7      INC3 02 FB4F     INCAR 02 FB40
      INCH 02 F88C     INCH1 02 FA3D     INCMD 02 FB24    INCRAW 02 FB4B
     INEEE 02 FB3C     INFUF 02 FB56     INHEX 02 F912     INVEC 02 7F12
       IOV 02 F815      IOVR 02 7F00      LOAD 02 F842    LOAD11 02 F862
    LOAD15 02 F871    LOAD21 02 F878     LOAD3 02 F844     MCALL 02 FB6F
      MCL0 02 FB8D      MCL1 02 FB95     MCONT 02 7F21    MTAPE1 02 FBAE
    MTAPE3 02 FBB5      NIOR 02 7F02    NOECHO 02 F83A     NOFUF 02 FB61
       OT1 02 FB31     OTCAR 02 FB2F     OUT2H 02 F939    OUT2HA 02 F93B
    OUT2HS 02 F945    OUT4HS 02 F943     OUTCH 02 F889    OUTCH1 02 FA40
     OUTEE 02 FB2B     OUTHL 02 F87B     OUTHR 02 F87F     OUTQA 02 F8A1
     OUTQM 02 F86D      OUTS 02 F947    OUTSTG 02 F8C4    OUTVEC 02 7F14
    PDATA1 02 F8CB    PDATA2 02 F8C9    PNCHHD 02 FB63    PNCHTR 02 FB64
    PNHOFF 02 FA43    POWDWN 02 F819     PRINT 02 FAE1    PRNTRG 02 FA16
     PRT01 02 FA27      PRT1 02 FAF7      PRT2 02 FB04      PRT3 02 FAE9
      PRT4 02 FB20      PRT5 02 FB22    PRTREG 02 FA1B     PUN11 02 FA58
     PUN22 02 FA64     PUN23 02 FA66     PUN32 02 FA95     PUN35 02 FA52
     PUN40 02 FA82     PUN50 02 FA75     PUNCH 02 FA4D     PUNT2 02 FAA9
   RAMBASE 00 7F00    RDROFF 02 FA44     RDRON 02 F83A     REENT 02 F812
   ROMBASE 00 F800      SAD1 02 FAC7      SAD2 02 FAE0     SADDR 02 FAAE
    SELCAR 02 FB18       SFE 02 FA0A   SPI0FUF 00 03FD   SPI0TUF 00 03FC
     START 02 F94C    STATUS 02 7F22     STRG1 02 FB9A     STRG2 02 FBA4
    SW2VEC 02 7F08    SW3VEC 02 7F0A     SWI2V 02 F825     SWI3V 02 F829
      SWIV 02 F81D    SWIVEC 02 7F04     TEMP1 02 7F1E     TINIT 02 FA3C
      TRAP 02 F82D    TRAPVC 02 7F0C       TSP 02 7F1F    TSTACK 00 7F68
        TW 02 7F16       XHI 02 7F1C       XLO 02 7F1D    XTEMP3 02 7F19
136 SYMBOLS

0 error(s), 2 warning(s)
